{"version":3,"sources":["webpack:///index.js","webpack:///./js/app.js","webpack:///./js/cameraListView.js","webpack:///./js/cameraView.js","webpack:///./js/dashboardView.js","webpack:///./index.html","webpack:///external \"angular\"","webpack:///external {\"amd\":\"angular-route\"}","webpack:///./js/index.js","webpack:///./views/camera_list.html","webpack:///./views/camera_view.html","webpack:///./views/dashboard.html","webpack:///external \"Twilio.Sync\""],"names":["webpackJsonp","202","module","exports","__webpack_require__","CAMERA_SNAPSHOT_DOCUMENT_NAME","cameraId","CAMERA_CONTROL_MAP_NAME","CAMERA_ALERTS_LIST_NAME","CAMERA_ARCHIVES_LIST_NAME","alertId","callbacks","randomString","len","charSet","i","randomPoz","Math","floor","random","length","substring","fetchSnapshotTmpUrl","mcs_url","callback","$","ajax","type","url","dataType","beforeSend","xhr","setRequestHeader","token","success","data","status","links","content_direct_temporary","fetchCameraSnapshotTmpUrl","camera","snapshot","snapshotTmpUrl","snapshotLoadingInProgress","img_url","console","info","refresh","fetchSnapshot","syncClient","document","id","then","doc","snapshotDocument","value","on","log","JSON","stringify","fetchControl","map","Promise","all","get","items","controlMap","control","preview","alarm","arm","updateCameraMode","key","enabled","mode","loadCameras","invalidCameras","configDocument","cameras","name","contact_number","twilio_sim_sid","warn","push","removeAllListeners","cameraInfoCheck","match","genToken","hash","crypto","createHash","update","digest","SyncClient","Client","initialized","Deferred","updateToken","cb","that","this","result","setTimeout","bind","ttl","error","fail","jqXHR","textStatus","fetchConfiguration","newDoc","extend","forEach","idOfInvalidCamera","set","addCamera","newCamera","created_at","Date","getTime","t","mutate","remoteData","responded_alarm","list","catch","err","updateCamera","updatedCamera","regenToken","deleteCamera","removeMap","removeList","controlPreview","controlArm","syncCameraMode","disarm","getAlerts","getItems","order","page","getNextArchivedSnapshot","archiveId","item","init","resolve","203","cameraListView","templateUrl","app","$scope","angular","copy","cameraAdded","text","editedCameraInfo","hide","fadeIn","$apply","editCamera","regenTokenForCamera","cameraUpdated","click","204","cameraView","selectedAlertChanged","selectedAlertId","selectedArchiveId","selectNewArchiveId","newArchiveId","selectPreviousArchive","selectNextArchive","alerts","index","205","dashboardView","noCamera","Object","keys","changeCameraMode","img_oninit","img_onloaded","207","p","208","209","undefined","210","moment","currentView","$currentViewScope","App","window","controller","when","done","$routeParams","config","$routeProvider","otherwise","redirectTo","filter","datestr","format","directive","restrict","link","scope","element","attrs","imageloaded","295","path","run","c","put","296","297","322","Twilio","Sync"],"mappings":"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","file":"index.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 202:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nconst APP_CONFIGURATION_DOCUMENT_NAME = \"app.configuration\";\nfunction CAMERA_SNAPSHOT_DOCUMENT_NAME(cameraId) { return \"cameras.\" + cameraId + \".snapshot\"; }\nfunction CAMERA_CONTROL_MAP_NAME(cameraId) { return \"cameras.\" + cameraId + \".control\"; }\nfunction CAMERA_ALERTS_LIST_NAME(cameraId) { return \"cameras.\" + cameraId + \".alerts\"; }\nfunction CAMERA_ARCHIVES_LIST_NAME(cameraId, alertId) { return \"cameras.\" + cameraId + \".archives.\" + alertId; }\n\nmodule.exports = function(callbacks) {\n  const $ = __webpack_require__(4);\n  const crypto = __webpack_require__(43);\n  const SyncClient = __webpack_require__(322).Client;\n  var syncClient;\n  var token;\n  var auth = \"username=twilio&pincode=928462\";\n  var configDocument;\n\n  var cameras = {};\n\n  function randomString(len) {\n      var charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      var randomString = '';\n      for (var i = 0; i < len; i++) {\n          var randomPoz = Math.floor(Math.random() * charSet.length);\n          randomString += charSet.substring(randomPoz,randomPoz+1);\n      }\n      return randomString;\n  }\n\n  function fetchSnapshotTmpUrl(mcs_url, callback) {\n    $.ajax({\n      type: \"GET\",\n      url: mcs_url,\n      dataType: 'json',\n      beforeSend: function (xhr) { xhr.setRequestHeader('X-Twilio-Token', token); },\n      success: function (data, status, xhr) {\n        callback(data.links.content_direct_temporary);\n      }\n    });\n  }\n\n  function fetchCameraSnapshotTmpUrl(camera) {\n    fetchSnapshotTmpUrl(camera.snapshot.mcs_url, function (snapshotTmpUrl) {\n        // do not load new image when last image loading is in progress\n        // otherwise user might experience stalling camera view\n        if (!camera.snapshotLoadingInProgress) {\n            camera.snapshotLoadingInProgress = true;\n            camera.snapshot.img_url = snapshotTmpUrl;\n            console.info(\"Loading image: \" + camera.snapshot.img_url);\n        }\n        callbacks.refresh();\n    });\n  }\n\n  function fetchSnapshot(camera) {\n    syncClient.document(CAMERA_SNAPSHOT_DOCUMENT_NAME(camera.info.id)).then(function (doc) {\n      camera.snapshotDocument = doc;\n      camera.snapshot = doc.value;\n      fetchCameraSnapshotTmpUrl(camera);\n      doc.on(\"updated\", function (data) {\n        console.log(\"camera snapshot updated\", camera.info.id, JSON.stringify(data));\n        camera.snapshot = data;\n        fetchCameraSnapshotTmpUrl(camera);\n      });\n    });\n  }\n\n  function fetchControl(camera) {\n    syncClient.map(CAMERA_CONTROL_MAP_NAME(camera.info.id)).then(function (map) {\n      Promise.all([\n        map.get(\"preview\"),\n        map.get(\"alarm\"),\n        map.get(\"arm\")\n      ]).then(function (items) {\n        camera.controlMap = map;\n        camera.control = {\n          preview : items[0].value,\n          alarm : items[1].value,\n          arm : items[2].value,\n        };\n        updateCameraMode(camera);\n        console.log(\"camera control fetched\", camera.info.id, JSON.stringify(camera.control));\n        map.on(\"itemUpdated\", function (data) {\n          console.log(\"camera control updated\", camera.info.id, data.key, JSON.stringify(data.value));\n          camera.control[data.key] = data.value;\n          updateCameraMode(camera);\n          callbacks.refresh();\n        });\n        callbacks.refresh();\n      });\n    });\n  }\n\n  function updateCameraMode(camera) {\n    if(camera.control.preview.enabled === true &&\n      camera.control.arm.enabled === false) {\n      camera.mode = \"live-feed\";\n    } else {\n      camera.mode = \"arm\";\n    }\n    console.log(\"updateCameraMode\", camera.info.id, camera.mode);\n  }\n\n  function loadCameras() {\n    var invalidCameras = [];\n\n    for (var cameraId in configDocument.value.cameras) {\n      var camera = configDocument.value.cameras[cameraId];\n      if (camera.id === cameraId &&\n          typeof (camera.name) === \"string\" &&\n          typeof(camera.contact_number) === \"string\" &&\n          typeof(camera.twilio_sim_sid) === \"string\") {\n        if (cameraId in cameras) {\n          if (camera.name !== cameras[cameraId].info.name ||\n              camera.contact_number !== cameras[cameraId].info.contact_number ||\n              camera.twilio_sim_sid !== cameras[cameraId].info.twilio_sim_sid) {\n            console.log(\"Updating camera\", camera);\n            cameras[cameraId].info = camera;\n          }\n        } else {\n          console.log(\"Loading new camera\", camera);\n          cameras[cameraId] = {\n            info: camera\n          };\n          fetchSnapshot(cameras[cameraId]);\n          fetchControl(cameras[cameraId]);\n        }\n      } else {\n        console.warn(\"Invalid camera configuration, removing from the list: \", cameraId, camera);\n        invalidCameras.push(cameraId);\n      }\n    }\n    for (var cameraId in cameras) {\n      if (!(cameraId in configDocument.value.cameras)) {\n        console.log(\"Deleting camera\", camera);\n        if (cameras[cameraId].snapshotDocument) {\n          cameras[cameraId].snapshotDocument.removeAllListeners('updated');\n        }\n        if (cameras[cameraId].controlMap) {\n          cameras[cameraId].controlMap.removeAllListeners('itemUpdated');\n        }\n        delete cameras[cameraId];\n      }\n    }\n\n    return invalidCameras;\n  }\n\n  function cameraInfoCheck(camera, callback) {\n    if (!camera.id || !camera.id.match(/^[a-zA-Z0-9]+$/))  { callback(\"camera id is invalid: \" + camera.id); return false; }\n    if (!camera.name) { callback(\"camera name is not specified\"); return false; }\n    if (!camera.contact_number || !camera.contact_number.match(/^[0-9]+$/)) { callback(\"camera contact number is invalid(only digits allowed): \" + camera.contact_number); return false; }\n    if (!camera.twilio_sim_sid || !camera.twilio_sim_sid.match(/^DE[a-z0-9]{32}$/)) { callback(\"camera sim SID is invalid: \" + camera.twilio_sim_sid); return false; }\n    return true;\n  }\n\n  function genToken() {\n    var token = randomString(16);\n    var hash = crypto.createHash('sha512').update(token).digest(\"hex\");\n    return { token: token, hash: hash };\n  }\n\n  return {\n  initialized: $.Deferred(),\n\n  cameras: cameras,\n\n  updateToken: function (cb) {\n    var that = this;\n    return $.get(\"/userauthenticate?\" + auth, function (result) {\n      if (result.success) {\n        console.log(\"token updated:\", result);\n        token = result.token;\n        if (syncClient) {\n            syncClient.updateToken(token);\n        } else {\n            syncClient = new SyncClient(token);\n        }\n        if (cb) cb(token);\n        setTimeout(that.updateToken.bind(that), result.ttl*1000 * 0.96); // update token slightly in adance of ttl\n      } else {\n        console.error(\"failed to authenticate the user: \", result.error);\n      }\n    }).fail(function (jqXHR, textStatus, error) {\n      console.error(\"failed to send authentication request:\", textStatus, error);\n      setTimeout(that.updateToken.bind(that), 10000); // retry in 10 seconds\n    });\n  },\n\n  fetchConfiguration: function () {\n    return syncClient.document(APP_CONFIGURATION_DOCUMENT_NAME).then(function (doc) {\n      configDocument = doc;\n      var newDoc = null;\n      var invalidCameras;\n\n      if (doc.value.cameras) {\n        invalidCameras = loadCameras();\n        if (invalidCameras.length) {\n          if (null ===  newDoc) newDoc = $.extend(true, doc.value, {});\n          invalidCameras.forEach(function (idOfInvalidCamera) {\n            delete newDoc.cameras[idOfInvalidCamera];\n          });\n        }\n      } else {\n        console.warn(\"cameras is not configured, creating an empty list\");\n        if (null ===  newDoc) newDoc = $.extend(true, doc.value, {});\n        newDoc.cameras = {};\n      }\n      return newDoc;\n    }).then(function (newDoc) {\n      if (newDoc !== null) {\n        return configDocument.set(newDoc).then(function () {\n          console.log(\"app configuration updated with new value:\", newDoc);\n        });\n      }\n    });\n  },\n\n  addCamera: function (newCamera, callback) {\n    if (!cameraInfoCheck(newCamera, callback)) return;\n    if (newCamera.id in configDocument.value.cameras) return callback(\"Camera with the same ID exists\");\n    newCamera.created_at = (new Date()).getTime();\n\n    var t = genToken();\n    newCamera.hash = t.hash;\n\n    configDocument.mutate(function (remoteData) {\n      if (!remoteData.cameras) remoteData.cameras = {};\n      remoteData.cameras[newCamera.id] = newCamera;\n      return remoteData;\n    }).then(function () {\n      // create necessary objects\n      return Promise.all([\n        syncClient.map(CAMERA_CONTROL_MAP_NAME(newCamera.id)).then(function (controlMap) {\n          return Promise.all[\n            controlMap.set('alarm', { id: -1 }),\n            controlMap.set('arm', { enabled: true, responded_alarm: -1}),\n            controlMap.set('preview', { enabled : false })\n          ];\n        }),\n        syncClient.list(CAMERA_ALERTS_LIST_NAME(newCamera.id)),\n      ]);\n    }).then(function () {\n      loadCameras();\n      // make token temporarily visible\n      callback(null, $.extend(true, cameras[newCamera.id].info, { token: t.token }));\n      callbacks.refresh();\n    }).catch(function (err) {\n      callback(err);\n    });\n  },\n\n  updateCamera: function (updatedCamera, callback) {\n    configDocument.mutate(function (remoteData) {\n      if (updatedCamera.id in remoteData.cameras) {\n        remoteData.cameras[updatedCamera.id] = $.extend(true, updatedCamera, {\n            hash: remoteData.cameras[updatedCamera.id].hash\n          });\n      } else {\n        callback(\"Camera is not in the list\");\n      }\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      callback(null);\n      callbacks.refresh();\n    }).catch(function (err) {\n      callback(err);\n    });\n  },\n\n  regenToken: function (cameraId, callback) {\n    var t = genToken();\n    configDocument.mutate(function (remoteData) {\n      if (cameraId in remoteData.cameras) {\n        remoteData.cameras[cameraId].hash = t.hash;\n      } else {\n        throw \"unknown camera: \" + cameraId;\n      }\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      // make token temporarily visible\n      callback($.extend(true, cameras[cameraId].info, { token: t.token }));\n      callbacks.refresh();\n    }).catch(function (err) {\n      // ignore error\n      console.error(\"regenToken\", err);\n    });\n  },\n\n  deleteCamera: function (cameraId) {\n    configDocument.mutate(function (remoteData) {\n      delete remoteData.cameras[cameraId];\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      callbacks.refresh();\n    }).then(function () {\n      syncClient.map(CAMERA_CONTROL_MAP_NAME(cameraId)).then(function (map) { map.removeMap(); });\n      syncClient.list(CAMERA_ALERTS_LIST_NAME(cameraId)).then(function (list) { list.removeList(); });\n    });\n  },\n\n  controlPreview: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"preview\", camera.control.preview)\n    .then(function () {\n      console.log(\"switchPreview updated\", cameraId, camera.control.preview);\n    }).catch(function (err) {\n      console.err(\"switchPreview failed\", err);\n    });\n  },\n\n  controlArm: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap\n    .set(\"arm\", camera.control.arm)\n    .then(function () {\n      console.log(\"switchArm updated\", cameraId, camera.control.arm);\n    }).catch(function (err) {\n      console.err(\"switchArm failed\", err);\n    });\n  },\n\n  syncCameraMode: function (cameraId) {\n    var camera = cameras[cameraId];\n\n    if (camera.mode == \"live-feed\") {\n      camera.control.preview.enabled = true;\n      camera.control.arm.enabled = false;\n    } else /* armed mode */ {\n      camera.control.preview.enabled = false;\n      camera.control.arm.enabled = true;        \n      camera.mode = \"arm\";\n    }\n    camera.controlMap\n    .set(\"preview\", camera.control.preview)\n    .then(function () {\n        return camera.controlMap.set(\"arm\", camera.control.arm)\n    })\n    .then(function () {\n      console.log(\"syncCameraMode control updated\", cameraId, camera.control);\n    }).catch(function (err) {\n      console.err(\"syncCameraMode failed\", cameraId, err);\n    });\n  },\n\n  disarm: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"arm\", {\n      enabled: camera.control.arm.enabled,\n      responded_alarm: camera.control.alarm.id\n    })\n    .then(function () {\n      console.log(\"disarm updated\", cameraId, camera.control.arm);\n    }).catch(function (err) {\n      console.err(\"disarm failed\", err);\n    });\n  },\n\n  getAlerts: function (cameraId, callback) {\n    syncClient.list(CAMERA_ALERTS_LIST_NAME(cameraId)).then(function (list) {\n      return list.getItems({ order: \"desc\" }).then(function (page) {\n        console.log(\"getAlerts\", page);\n        callback(page.items);\n      });\n    }).catch(function (err) {\n      console.error(\"getAlerts failed\", err);\n    });\n  },\n\n  getNextArchivedSnapshot: function (cameraId, alertId, archiveId, callback) {\n    syncClient.list(CAMERA_ARCHIVES_LIST_NAME(cameraId, alertId)).then(function (list) {\n      return list.get(archiveId);\n    }).then(function (item) {\n      fetchSnapshotTmpUrl(item.data.value.mcs_url, function (snapshotTmpUrl) {\n        callback(snapshotTmpUrl);\n      });\n    }).catch(function (err) {\n      console.info(\"getNextArchivedSnapshot failed\", err);\n      callback(null);\n    });\n  },\n\n  init: function () {\n    var that = this;\n    this.updateToken(function (token) {\n      that.fetchConfiguration().then(function () {\n        callbacks.refresh();\n      }).then(function () {\n        that.initialized.resolve();\n      });\n    });\n  }\n  };\n};\n\n\n/***/ }),\n\n/***/ 203:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $ = __webpack_require__(4);\n\nvar cameraListView = {\n  templateUrl: __webpack_require__(295),\n\n  init: function (app, $scope) {\n    $scope.cameras = app.cameras;\n    $scope.newCamera = {};\n    $scope.addCamera = function () {\n      app.addCamera(angular.copy($scope.newCamera), function (err, cameraAdded) {\n        if (err) {\n          $('#add-camera-failed').text(JSON.stringify(err));          \n        } else {\n          $scope.editedCameraInfo = cameraAdded;\n          $('.add-camera').hide();\n          $('.add-camera-show').fadeIn(333);          \n          $scope.$apply();\n        }\n      });\n    };\n    $scope.editCamera = function (cameraId) {\n      $scope.editedCameraInfo = app.cameras[cameraId].info;\n      $('.edit-camera').fadeIn(333);\n    };\n    $scope.updateCamera = function () {\n      app.updateCamera(angular.copy($scope.editedCameraInfo), function (err) {\n        if (err) {\n          $('#edit-camera-failed').text(JSON.stringify(err));          \n        } else {\n          $('.edit-camera').hide();\n          $scope.$apply();\n        }\n      });\n    };\n    $scope.deleteCamera = function (cameraId) {\n      app.deleteCamera(cameraId);\n    };\n    $scope.regenTokenForCamera = function (cameraId) {\n      app.regenToken(cameraId, function (cameraUpdated) {\n        $scope.editedCameraInfo = cameraUpdated;\n      });\n    };\n\n    $('.add-camera-show').click(function() {\n      $(this).hide();\n      $('.add-camera').fadeIn(333);\n    });\n    $('.add-camera-cancel').click(function() {\n      $('.add-camera').hide();\n      $('.add-camera-show').fadeIn(333);\n    });\n\n    $('.edit-camera-cancel').click(function() {\n      $scope.editedCameraInfo = null;\n      $('.edit-camera').hide();\n      $scope.$apply();\n    });\n  },\n};\n\nmodule.exports = cameraListView;\n\n\n/***/ }),\n\n/***/ 204:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $ = __webpack_require__(4);\n\nvar cameraView = {\n  templateUrl: __webpack_require__(296),\n\n  init: function (app, cameraId, $scope) {\n    $scope.camera = app.cameras[cameraId];\n    $scope.selectedAlertChanged = function () {\n      console.log(\"selectedAlertChanged\", $scope.selectedAlertId);\n      $scope.selectedArchiveId = 0;\n      $scope.selectNewArchiveId(0);\n      $scope.snapshotTmpUrl = null;\n    };\n    $scope.selectNewArchiveId = function (newArchiveId) {\n      console.log(\"selectNewArchiveId start\", $scope.selectedAlertId, newArchiveId);\n      app.getNextArchivedSnapshot(cameraId, $scope.selectedAlertId, newArchiveId, function (snapshotTmpUrl) {\n        if (snapshotTmpUrl) {\n          console.log(\"selectNewArchiveId accepted\", $scope.selectedAlertId, snapshotTmpUrl);\n          $scope.selectedArchiveId = newArchiveId;\n          $scope.snapshotTmpUrl = snapshotTmpUrl;\n          $scope.$apply();\n        } else {\n          console.log(\"selectNewArchiveId rejected\", $scope.selectedAlertId);\n        }\n      });\n    };\n    $scope.selectPreviousArchive = function () {\n      if ($scope.selectedArchiveId > 0) {\n        $scope.selectNewArchiveId($scope.selectedArchiveId - 1);\n      }\n    };\n    $scope.selectNextArchive = function () {\n        $scope.selectNewArchiveId($scope.selectedArchiveId + 1);\n    };\n    app.getAlerts(cameraId, function (alerts) {\n      $scope.alerts = alerts;\n      $scope.selectedAlertId = alerts[0].data.index+\"\";\n      $scope.$apply();\n      $scope.selectedAlertChanged();\n    });\n  }\n};\n\nmodule.exports = cameraView;\n\n\n/***/ }),\n\n/***/ 205:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dashboardView = {\n  templateUrl: __webpack_require__(297),\n\n  init: function (app, $scope) {\n    $scope.cameras = app.cameras;\n    $scope.noCamera = function () { return Object.keys(app.cameras).length === 0; }\n    $scope.changeCameraMode = function(camera) {\n      app.syncCameraMode(camera.info.id);\n    };\n    $scope.img_oninit = function (camera) {\n        camera.snapshotLoadingInProgress = false;\n    };\n    $scope.img_onloaded = function (camera) {\n        console.info(\"Image loaded: \" + camera.snapshot.img_url);\n        camera.snapshotLoadingInProgress = false;\n    };\n    $scope.disarm = function (cameraId) {\n      app.disarm(cameraId);\n    };\n  }\n};\n\nmodule.exports = dashboardView;\n\n\n/***/ }),\n\n/***/ 207:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"index.html\";\n\n/***/ }),\n\n/***/ 208:\n/***/ (function(module, exports) {\n\nmodule.exports = angular;\n\n/***/ }),\n\n/***/ 209:\n/***/ (function(module, exports) {\n\nmodule.exports = undefined;\n\n/***/ }),\n\n/***/ 210:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nconst $ = __webpack_require__(4);\nconst angular = __webpack_require__(208);\nconst moment = __webpack_require__(0);\n__webpack_require__(209);\n\nconst MOMENT_FORMAT = \"MMM DD YYYY @ hh:mm\";\n\n// style sheets\n__webpack_require__(30);\n__webpack_require__(31);\n\n// index.html\n__webpack_require__(207);\n\nconst dashboardView = __webpack_require__(205);\nconst cameraListView = __webpack_require__(203);\nconst cameraView = __webpack_require__(204);\n\nvar currentView;\nvar $currentViewScope;\n\nvar App = __webpack_require__(202);\nwindow.app = new App({\n  refresh: function () {\n    $currentViewScope.$apply();\n  }\n});\n\nangular\n  .module(\"app\", [\n    'ngRoute'\n  ])\n  .controller('DashboardViewCtrl', ['$scope', function ($scope) {\n    $currentViewScope = $scope;\n    currentView = dashboardView;\n    $.when(app.initialized).done(function () {\n      dashboardView.init(app, $scope);\n    });\n  }])\n  .controller('CameraListViewCtrl', ['$scope', function ($scope) {\n    $currentViewScope = $scope;\n    currentView = cameraListView;\n    $.when(app.initialized).done(function () {\n      cameraListView.init(app, $scope);\n    });\n  }])\n  .controller('CameraView', ['$routeParams', '$scope', function ($routeParams, $scope) {\n    $currentViewScope = $scope;\n    currentView = cameraView;\n    $.when(app.initialized).done(function () {\n      cameraView.init(app, $routeParams.id, $scope);\n    });\n  }])\n  .config(['$routeProvider', function ($routeProvider) {\n    $routeProvider\n      .when('/dashboard', { controller: 'DashboardViewCtrl', templateUrl: dashboardView.templateUrl } )\n      .when('/cameras', { controller: 'CameraListViewCtrl', templateUrl: cameraListView.templateUrl } )\n      .when('/cameras/:id', { controller: 'CameraView', templateUrl: cameraView.templateUrl } )\n      .otherwise({ redirectTo: '/dashboard' }); \n  }])\n  .filter('moment', function () {\n    return function (datestr) {\n      return moment(datestr).format(MOMENT_FORMAT);\n    };\n  })\n  .directive('imageloaded', function() {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            element.bind('load', function() {\n                //call the function that was passed\n                scope.$apply(attrs.imageloaded);\n            });\n        }\n    };\n  });  \n\n\n/***/ }),\n\n/***/ 295:\n/***/ (function(module, exports) {\n\nvar path = 'views/camera_list.html';\nvar html = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h1 id=\\\"tables\\\">Configuration</h1>\\n    </div>\\n\\n    <div class=\\\"bs-component\\\">\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th><strong>Id</strong></th>\\n            <th><strong>Name</strong></th>\\n            <th><strong>Phone Number</strong></th>\\n            <th><strong>SIM Sid</strong></th>\\n            <th><strong>Token</strong></th>\\n            <th><strong>Created</strong></th>\\n            <th><strong>Actions</strong></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"camera in cameras\\\" class=\\\"chalk-background\\\" ng-class=\\\"{'text-success': editedCameraInfo.id === camera.info.id}\\\">\\n            <td>{{ camera.info.id }}</td>\\n            <td>{{ camera.info.name }}</td>\\n            <td>{{ camera.info.contact_number }}</td>\\n            <td>{{ camera.info.twilio_sim_sid }}</td>\\n            <td>\\n                <small ng-if=\\\"editedCameraInfo.id === camera.info.id\\\" class=\\\"text-warning\\\">{{ editedCameraInfo.token }}</small>\\n                <button ng-click=\\\"regenTokenForCamera(camera.info.id)\\\" ng-if=\\\"editedCameraInfo.id !== camera.info.id\\\" class=\\\"btn btn-xs btn-success\\\">Regenerate</button>\\n            </td>\\n            <td>{{ camera.info.created_at | moment }}</td>\\n            <td>\\n                <button ng-click=\\\"editCamera(camera.info.id)\\\" class=\\\"btn btn-xs btn-success\\\">Edit</button>\\n                &nbsp;\\n                <button ng-click=\\\"deleteCamera(camera.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div></div><!-- /example -->\\n  </div>\\n</div>\\n\\n<button class=\\\"btn btn-primary add-camera-show\\\">New Security Camera</button>\\n\\n<div class=\\\"row add-camera chalk-background\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"addCamera()\\\">\\n      <fieldset>\\n        <h2>Add Security Camera</h2>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2\\\">Id</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.id\\\" id=\\\"id\\\" placeholder=\\\"\\\">\\n            <p>This can be any unique alphanumeric identifier.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2\\\">Name</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.name\\\" id=\\\"name\\\" placeholder=\\\"\\\">\\n            <p>Give your Security Camera a descriptive name for the dashboard.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"contact_number\\\" class=\\\"col-lg-2\\\">Phone Number</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.contact_number\\\" id=\\\"contact_number\\\" placeholder=\\\"\\\">\\n            <p>The phone number that receives text notifications.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"twilio_sim_sid\\\" class=\\\"col-lg-2\\\">Twilio SIM Sid</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.twilio_sim_sid\\\" id=\\\"twilio_sim_sid\\\" placeholder=\\\"\\\">\\n            <p>You can find your SIM Sid in Twilio's <a href=\\\"https://www.twilio.com/console/wireless/sims/\\\">Console</a>.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default add-camera-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"add-camera-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\\n<div class=\\\"row edit-camera\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"updateCamera()\\\">\\n      <fieldset>\\n        <legend>Update Security Camera</legend>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2\\\">Id</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.id\\\" id=\\\"id\\\" value=\\\"{{ editedCameraInfo.id }}\\\" placeholder=\\\"\\\" disabled>\\n            <p>This can be any unique alphanumeric identifier.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2\\\">Name</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.name\\\" id=\\\"name\\\" value=\\\"{{ editedCameraInfo.name }}\\\" placeholder=\\\"\\\">\\n            <p>Give your Security Camera a descriptive name for the dashboard.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"contact_number\\\" class=\\\"col-lg-2\\\">Phone Number</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.contact_number\\\" id=\\\"contact_number\\\" value=\\\"{{ editedCameraInfo.contact_number }}\\\" placeholder=\\\"\\\">\\n            <p>This is the phone number that receives text notifications.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"twilio_sim_sid\\\" class=\\\"col-lg-2\\\">Twilio SIM Sid</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.twilio_sim_sid\\\" id=\\\"twilio_sim_sid\\\" value=\\\"{{ editedCameraInfo.twilio_sim_sid }}\\\" placeholder=\\\"\\\">\\n            <p>You can find your SIM Sid in Twilio's <a href=\\\"https://www.twilio.com/console/wireless/sims/\\\">Console</a>.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default edit-camera-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"edit-camera-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 296:\n/***/ (function(module, exports) {\n\nvar path = 'views/camera_view.html';\nvar html = \"<div class=\\\"archive-notification\\\" ng-show=\\\"!snapshotTmpUrl\\\">\\n  <h1>No Security Camera Alerts</h1>\\n  <p>No notifications have been logged.</p>\\n</div>\\n\\n<div ng-show=\\\"!!snapshotTmpUrl\\\">\\n  <h1>{{ camera.info.name }}</h1>\\n\\n  <div class=\\\"alerts-list\\\">\\n    <span>Select an alert to view\\n      <select class=\\\"form-control\\\" id=\\\"alertSelect\\\" ng-model=\\\"selectedAlertId\\\" ng-change=\\\"selectedAlertChanged()\\\">\\n        <option value=\\\"\\\" selected>Click to select</option>\\n        <option ng-repeat=\\\"alert in alerts\\\" value=\\\"{{alert.data.index}}\\\">{{alert.data.index}} : {{alert.data.value.datetime_utc | moment}}</option>\\n      </select>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"archive-view row chalk-background\\\">\\n    <div class=\\\"camera-feed buffer\\\">\\n      <img ng-src=\\\"{{ snapshotTmpUrl }}\\\" />\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row navigate-archive\\\">\\n      <a href=\\\"\\\" ng-click=\\\"selectPreviousArchive()\\\">&lt;Previous</a> |\\n      <a href=\\\"\\\" ng-click=\\\"selectNextArchive()\\\">Next &gt;</a>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 297:\n/***/ (function(module, exports) {\n\nvar path = 'views/dashboard.html';\nvar html = \"<h1>Active Security Cameras</h1>\\n\\n<p ng-show=\\\"noCamera()\\\">We aren't tracking any Security Cameras right now. Click the Add Security Camera button to get started.</p>\\n\\n<div ng-repeat=\\\"camera in cameras\\\" class=\\\"jumbotron camera camera{{ camera.info.id }} chalk-background\\\">\\n  <h3>\\n    <span>{{ camera.info.name }}</span>\\n    <div>\\n      <span class=\\\"small\\\">Select the mode for your camera</span>\\n        <select class=\\\"selectpicker small\\\" autocomplete=\\\"off\\\"\\n          ng-model=\\\"camera.mode\\\"\\n          ng-change=\\\"changeCameraMode(camera)\\\">\\n            <option value=\\\"live-feed\\\">Live Feed</option>\\n            <option value=\\\"arm\\\">Armed</option>\\n        </select>\\n    </div>\\n  </h3>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-8 col-lg-offset-2 img-parent\\\">\\n      <div class=\\\"camera-feed\\\">\\n        <img ng-src=\\\"{{ camera.snapshot.img_url }}\\\" ng-init=\\\"img_oninit(camera)\\\" imageloaded=\\\"img_onloaded(camera)\\\"/>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row motion_stats\\\">\\n    <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n      <div class=\\\"alert alert-success\\\" ng-if=\\\"camera.control.alarm.id === camera.control.arm.responded_alarm\\\">\\n        <strong>No Active Alarm</strong>\\n      </div>\\n      <button class=\\\"alert alert-danger\\\" ng-if=\\\"camera.control.alarm.id !== camera.control.arm.responded_alarm\\\" ng-click=\\\"disarm(camera.info.id)\\\">\\n        <strong>Dismiss Alarm</strong>\\n      </button>\\n      <div>\\n        <a href=\\\"#!/cameras/{{ camera.info.id }}\\\">Browse archived alerts</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 322:\n/***/ (function(module, exports) {\n\nmodule.exports = Twilio.Sync;\n\n/***/ })\n\n},[210]);\n\n\n// WEBPACK FOOTER //\n// index.js","'use strict';\n\nconst APP_CONFIGURATION_DOCUMENT_NAME = \"app.configuration\";\nfunction CAMERA_SNAPSHOT_DOCUMENT_NAME(cameraId) { return \"cameras.\" + cameraId + \".snapshot\"; }\nfunction CAMERA_CONTROL_MAP_NAME(cameraId) { return \"cameras.\" + cameraId + \".control\"; }\nfunction CAMERA_ALERTS_LIST_NAME(cameraId) { return \"cameras.\" + cameraId + \".alerts\"; }\nfunction CAMERA_ARCHIVES_LIST_NAME(cameraId, alertId) { return \"cameras.\" + cameraId + \".archives.\" + alertId; }\n\nmodule.exports = function(callbacks) {\n  const $ = require(\"jquery\");\n  const crypto = require(\"crypto\");\n  const SyncClient = require(\"twilio-sync\").Client;\n  var syncClient;\n  var token;\n  var auth = \"username=twilio&pincode=928462\";\n  var configDocument;\n\n  var cameras = {};\n\n  function randomString(len) {\n      var charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      var randomString = '';\n      for (var i = 0; i < len; i++) {\n          var randomPoz = Math.floor(Math.random() * charSet.length);\n          randomString += charSet.substring(randomPoz,randomPoz+1);\n      }\n      return randomString;\n  }\n\n  function fetchSnapshotTmpUrl(mcs_url, callback) {\n    $.ajax({\n      type: \"GET\",\n      url: mcs_url,\n      dataType: 'json',\n      beforeSend: function (xhr) { xhr.setRequestHeader('X-Twilio-Token', token); },\n      success: function (data, status, xhr) {\n        callback(data.links.content_direct_temporary);\n      }\n    });\n  }\n\n  function fetchCameraSnapshotTmpUrl(camera) {\n    fetchSnapshotTmpUrl(camera.snapshot.mcs_url, function (snapshotTmpUrl) {\n        // do not load new image when last image loading is in progress\n        // otherwise user might experience stalling camera view\n        if (!camera.snapshotLoadingInProgress) {\n            camera.snapshotLoadingInProgress = true;\n            camera.snapshot.img_url = snapshotTmpUrl;\n            console.info(\"Loading image: \" + camera.snapshot.img_url);\n        }\n        callbacks.refresh();\n    });\n  }\n\n  function fetchSnapshot(camera) {\n    syncClient.document(CAMERA_SNAPSHOT_DOCUMENT_NAME(camera.info.id)).then(function (doc) {\n      camera.snapshotDocument = doc;\n      camera.snapshot = doc.value;\n      fetchCameraSnapshotTmpUrl(camera);\n      doc.on(\"updated\", function (data) {\n        console.log(\"camera snapshot updated\", camera.info.id, JSON.stringify(data));\n        camera.snapshot = data;\n        fetchCameraSnapshotTmpUrl(camera);\n      });\n    });\n  }\n\n  function fetchControl(camera) {\n    syncClient.map(CAMERA_CONTROL_MAP_NAME(camera.info.id)).then(function (map) {\n      Promise.all([\n        map.get(\"preview\"),\n        map.get(\"alarm\"),\n        map.get(\"arm\")\n      ]).then(function (items) {\n        camera.controlMap = map;\n        camera.control = {\n          preview : items[0].value,\n          alarm : items[1].value,\n          arm : items[2].value,\n        };\n        updateCameraMode(camera);\n        console.log(\"camera control fetched\", camera.info.id, JSON.stringify(camera.control));\n        map.on(\"itemUpdated\", function (data) {\n          console.log(\"camera control updated\", camera.info.id, data.key, JSON.stringify(data.value));\n          camera.control[data.key] = data.value;\n          updateCameraMode(camera);\n          callbacks.refresh();\n        });\n        callbacks.refresh();\n      });\n    });\n  }\n\n  function updateCameraMode(camera) {\n    if(camera.control.preview.enabled === true &&\n      camera.control.arm.enabled === false) {\n      camera.mode = \"live-feed\";\n    } else {\n      camera.mode = \"arm\";\n    }\n    console.log(\"updateCameraMode\", camera.info.id, camera.mode);\n  }\n\n  function loadCameras() {\n    var invalidCameras = [];\n\n    for (var cameraId in configDocument.value.cameras) {\n      var camera = configDocument.value.cameras[cameraId];\n      if (camera.id === cameraId &&\n          typeof (camera.name) === \"string\" &&\n          typeof(camera.contact_number) === \"string\" &&\n          typeof(camera.twilio_sim_sid) === \"string\") {\n        if (cameraId in cameras) {\n          if (camera.name !== cameras[cameraId].info.name ||\n              camera.contact_number !== cameras[cameraId].info.contact_number ||\n              camera.twilio_sim_sid !== cameras[cameraId].info.twilio_sim_sid) {\n            console.log(\"Updating camera\", camera);\n            cameras[cameraId].info = camera;\n          }\n        } else {\n          console.log(\"Loading new camera\", camera);\n          cameras[cameraId] = {\n            info: camera\n          };\n          fetchSnapshot(cameras[cameraId]);\n          fetchControl(cameras[cameraId]);\n        }\n      } else {\n        console.warn(\"Invalid camera configuration, removing from the list: \", cameraId, camera);\n        invalidCameras.push(cameraId);\n      }\n    }\n    for (var cameraId in cameras) {\n      if (!(cameraId in configDocument.value.cameras)) {\n        console.log(\"Deleting camera\", camera);\n        if (cameras[cameraId].snapshotDocument) {\n          cameras[cameraId].snapshotDocument.removeAllListeners('updated');\n        }\n        if (cameras[cameraId].controlMap) {\n          cameras[cameraId].controlMap.removeAllListeners('itemUpdated');\n        }\n        delete cameras[cameraId];\n      }\n    }\n\n    return invalidCameras;\n  }\n\n  function cameraInfoCheck(camera, callback) {\n    if (!camera.id || !camera.id.match(/^[a-zA-Z0-9]+$/))  { callback(\"camera id is invalid: \" + camera.id); return false; }\n    if (!camera.name) { callback(\"camera name is not specified\"); return false; }\n    if (!camera.contact_number || !camera.contact_number.match(/^[0-9]+$/)) { callback(\"camera contact number is invalid(only digits allowed): \" + camera.contact_number); return false; }\n    if (!camera.twilio_sim_sid || !camera.twilio_sim_sid.match(/^DE[a-z0-9]{32}$/)) { callback(\"camera sim SID is invalid: \" + camera.twilio_sim_sid); return false; }\n    return true;\n  }\n\n  function genToken() {\n    var token = randomString(16);\n    var hash = crypto.createHash('sha512').update(token).digest(\"hex\");\n    return { token: token, hash: hash };\n  }\n\n  return {\n  initialized: $.Deferred(),\n\n  cameras: cameras,\n\n  updateToken: function (cb) {\n    var that = this;\n    return $.get(\"/userauthenticate?\" + auth, function (result) {\n      if (result.success) {\n        console.log(\"token updated:\", result);\n        token = result.token;\n        if (syncClient) {\n            syncClient.updateToken(token);\n        } else {\n            syncClient = new SyncClient(token);\n        }\n        if (cb) cb(token);\n        setTimeout(that.updateToken.bind(that), result.ttl*1000 * 0.96); // update token slightly in adance of ttl\n      } else {\n        console.error(\"failed to authenticate the user: \", result.error);\n      }\n    }).fail(function (jqXHR, textStatus, error) {\n      console.error(\"failed to send authentication request:\", textStatus, error);\n      setTimeout(that.updateToken.bind(that), 10000); // retry in 10 seconds\n    });\n  },\n\n  fetchConfiguration: function () {\n    return syncClient.document(APP_CONFIGURATION_DOCUMENT_NAME).then(function (doc) {\n      configDocument = doc;\n      var newDoc = null;\n      var invalidCameras;\n\n      if (doc.value.cameras) {\n        invalidCameras = loadCameras();\n        if (invalidCameras.length) {\n          if (null ===  newDoc) newDoc = $.extend(true, doc.value, {});\n          invalidCameras.forEach(function (idOfInvalidCamera) {\n            delete newDoc.cameras[idOfInvalidCamera];\n          });\n        }\n      } else {\n        console.warn(\"cameras is not configured, creating an empty list\");\n        if (null ===  newDoc) newDoc = $.extend(true, doc.value, {});\n        newDoc.cameras = {};\n      }\n      return newDoc;\n    }).then(function (newDoc) {\n      if (newDoc !== null) {\n        return configDocument.set(newDoc).then(function () {\n          console.log(\"app configuration updated with new value:\", newDoc);\n        });\n      }\n    });\n  },\n\n  addCamera: function (newCamera, callback) {\n    if (!cameraInfoCheck(newCamera, callback)) return;\n    if (newCamera.id in configDocument.value.cameras) return callback(\"Camera with the same ID exists\");\n    newCamera.created_at = (new Date()).getTime();\n\n    var t = genToken();\n    newCamera.hash = t.hash;\n\n    configDocument.mutate(function (remoteData) {\n      if (!remoteData.cameras) remoteData.cameras = {};\n      remoteData.cameras[newCamera.id] = newCamera;\n      return remoteData;\n    }).then(function () {\n      // create necessary objects\n      return Promise.all([\n        syncClient.map(CAMERA_CONTROL_MAP_NAME(newCamera.id)).then(function (controlMap) {\n          return Promise.all[\n            controlMap.set('alarm', { id: -1 }),\n            controlMap.set('arm', { enabled: true, responded_alarm: -1}),\n            controlMap.set('preview', { enabled : false })\n          ];\n        }),\n        syncClient.list(CAMERA_ALERTS_LIST_NAME(newCamera.id)),\n      ]);\n    }).then(function () {\n      loadCameras();\n      // make token temporarily visible\n      callback(null, $.extend(true, cameras[newCamera.id].info, { token: t.token }));\n      callbacks.refresh();\n    }).catch(function (err) {\n      callback(err);\n    });\n  },\n\n  updateCamera: function (updatedCamera, callback) {\n    configDocument.mutate(function (remoteData) {\n      if (updatedCamera.id in remoteData.cameras) {\n        remoteData.cameras[updatedCamera.id] = $.extend(true, updatedCamera, {\n            hash: remoteData.cameras[updatedCamera.id].hash\n          });\n      } else {\n        callback(\"Camera is not in the list\");\n      }\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      callback(null);\n      callbacks.refresh();\n    }).catch(function (err) {\n      callback(err);\n    });\n  },\n\n  regenToken: function (cameraId, callback) {\n    var t = genToken();\n    configDocument.mutate(function (remoteData) {\n      if (cameraId in remoteData.cameras) {\n        remoteData.cameras[cameraId].hash = t.hash;\n      } else {\n        throw \"unknown camera: \" + cameraId;\n      }\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      // make token temporarily visible\n      callback($.extend(true, cameras[cameraId].info, { token: t.token }));\n      callbacks.refresh();\n    }).catch(function (err) {\n      // ignore error\n      console.error(\"regenToken\", err);\n    });\n  },\n\n  deleteCamera: function (cameraId) {\n    configDocument.mutate(function (remoteData) {\n      delete remoteData.cameras[cameraId];\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      callbacks.refresh();\n    }).then(function () {\n      syncClient.map(CAMERA_CONTROL_MAP_NAME(cameraId)).then(function (map) { map.removeMap(); });\n      syncClient.list(CAMERA_ALERTS_LIST_NAME(cameraId)).then(function (list) { list.removeList(); });\n    });\n  },\n\n  controlPreview: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"preview\", camera.control.preview)\n    .then(function () {\n      console.log(\"switchPreview updated\", cameraId, camera.control.preview);\n    }).catch(function (err) {\n      console.err(\"switchPreview failed\", err);\n    });\n  },\n\n  controlArm: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap\n    .set(\"arm\", camera.control.arm)\n    .then(function () {\n      console.log(\"switchArm updated\", cameraId, camera.control.arm);\n    }).catch(function (err) {\n      console.err(\"switchArm failed\", err);\n    });\n  },\n\n  syncCameraMode: function (cameraId) {\n    var camera = cameras[cameraId];\n\n    if (camera.mode == \"live-feed\") {\n      camera.control.preview.enabled = true;\n      camera.control.arm.enabled = false;\n    } else /* armed mode */ {\n      camera.control.preview.enabled = false;\n      camera.control.arm.enabled = true;        \n      camera.mode = \"arm\";\n    }\n    camera.controlMap\n    .set(\"preview\", camera.control.preview)\n    .then(function () {\n        return camera.controlMap.set(\"arm\", camera.control.arm)\n    })\n    .then(function () {\n      console.log(\"syncCameraMode control updated\", cameraId, camera.control);\n    }).catch(function (err) {\n      console.err(\"syncCameraMode failed\", cameraId, err);\n    });\n  },\n\n  disarm: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"arm\", {\n      enabled: camera.control.arm.enabled,\n      responded_alarm: camera.control.alarm.id\n    })\n    .then(function () {\n      console.log(\"disarm updated\", cameraId, camera.control.arm);\n    }).catch(function (err) {\n      console.err(\"disarm failed\", err);\n    });\n  },\n\n  getAlerts: function (cameraId, callback) {\n    syncClient.list(CAMERA_ALERTS_LIST_NAME(cameraId)).then(function (list) {\n      return list.getItems({ order: \"desc\" }).then(function (page) {\n        console.log(\"getAlerts\", page);\n        callback(page.items);\n      });\n    }).catch(function (err) {\n      console.error(\"getAlerts failed\", err);\n    });\n  },\n\n  getNextArchivedSnapshot: function (cameraId, alertId, archiveId, callback) {\n    syncClient.list(CAMERA_ARCHIVES_LIST_NAME(cameraId, alertId)).then(function (list) {\n      return list.get(archiveId);\n    }).then(function (item) {\n      fetchSnapshotTmpUrl(item.data.value.mcs_url, function (snapshotTmpUrl) {\n        callback(snapshotTmpUrl);\n      });\n    }).catch(function (err) {\n      console.info(\"getNextArchivedSnapshot failed\", err);\n      callback(null);\n    });\n  },\n\n  init: function () {\n    var that = this;\n    this.updateToken(function (token) {\n      that.fetchConfiguration().then(function () {\n        callbacks.refresh();\n      }).then(function () {\n        that.initialized.resolve();\n      });\n    });\n  }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/app.js\n// module id = 202\n// module chunks = 0","var $ = require(\"jquery\");\n\nvar cameraListView = {\n  templateUrl: require(\"../views/camera_list.html\"),\n\n  init: function (app, $scope) {\n    $scope.cameras = app.cameras;\n    $scope.newCamera = {};\n    $scope.addCamera = function () {\n      app.addCamera(angular.copy($scope.newCamera), function (err, cameraAdded) {\n        if (err) {\n          $('#add-camera-failed').text(JSON.stringify(err));          \n        } else {\n          $scope.editedCameraInfo = cameraAdded;\n          $('.add-camera').hide();\n          $('.add-camera-show').fadeIn(333);          \n          $scope.$apply();\n        }\n      });\n    };\n    $scope.editCamera = function (cameraId) {\n      $scope.editedCameraInfo = app.cameras[cameraId].info;\n      $('.edit-camera').fadeIn(333);\n    };\n    $scope.updateCamera = function () {\n      app.updateCamera(angular.copy($scope.editedCameraInfo), function (err) {\n        if (err) {\n          $('#edit-camera-failed').text(JSON.stringify(err));          \n        } else {\n          $('.edit-camera').hide();\n          $scope.$apply();\n        }\n      });\n    };\n    $scope.deleteCamera = function (cameraId) {\n      app.deleteCamera(cameraId);\n    };\n    $scope.regenTokenForCamera = function (cameraId) {\n      app.regenToken(cameraId, function (cameraUpdated) {\n        $scope.editedCameraInfo = cameraUpdated;\n      });\n    };\n\n    $('.add-camera-show').click(function() {\n      $(this).hide();\n      $('.add-camera').fadeIn(333);\n    });\n    $('.add-camera-cancel').click(function() {\n      $('.add-camera').hide();\n      $('.add-camera-show').fadeIn(333);\n    });\n\n    $('.edit-camera-cancel').click(function() {\n      $scope.editedCameraInfo = null;\n      $('.edit-camera').hide();\n      $scope.$apply();\n    });\n  },\n};\n\nmodule.exports = cameraListView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/cameraListView.js\n// module id = 203\n// module chunks = 0","var $ = require(\"jquery\");\n\nvar cameraView = {\n  templateUrl: require(\"../views/camera_view.html\"),\n\n  init: function (app, cameraId, $scope) {\n    $scope.camera = app.cameras[cameraId];\n    $scope.selectedAlertChanged = function () {\n      console.log(\"selectedAlertChanged\", $scope.selectedAlertId);\n      $scope.selectedArchiveId = 0;\n      $scope.selectNewArchiveId(0);\n      $scope.snapshotTmpUrl = null;\n    };\n    $scope.selectNewArchiveId = function (newArchiveId) {\n      console.log(\"selectNewArchiveId start\", $scope.selectedAlertId, newArchiveId);\n      app.getNextArchivedSnapshot(cameraId, $scope.selectedAlertId, newArchiveId, function (snapshotTmpUrl) {\n        if (snapshotTmpUrl) {\n          console.log(\"selectNewArchiveId accepted\", $scope.selectedAlertId, snapshotTmpUrl);\n          $scope.selectedArchiveId = newArchiveId;\n          $scope.snapshotTmpUrl = snapshotTmpUrl;\n          $scope.$apply();\n        } else {\n          console.log(\"selectNewArchiveId rejected\", $scope.selectedAlertId);\n        }\n      });\n    };\n    $scope.selectPreviousArchive = function () {\n      if ($scope.selectedArchiveId > 0) {\n        $scope.selectNewArchiveId($scope.selectedArchiveId - 1);\n      }\n    };\n    $scope.selectNextArchive = function () {\n        $scope.selectNewArchiveId($scope.selectedArchiveId + 1);\n    };\n    app.getAlerts(cameraId, function (alerts) {\n      $scope.alerts = alerts;\n      $scope.selectedAlertId = alerts[0].data.index+\"\";\n      $scope.$apply();\n      $scope.selectedAlertChanged();\n    });\n  }\n};\n\nmodule.exports = cameraView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/cameraView.js\n// module id = 204\n// module chunks = 0","var dashboardView = {\n  templateUrl: require(\"../views/dashboard.html\"),\n\n  init: function (app, $scope) {\n    $scope.cameras = app.cameras;\n    $scope.noCamera = function () { return Object.keys(app.cameras).length === 0; }\n    $scope.changeCameraMode = function(camera) {\n      app.syncCameraMode(camera.info.id);\n    };\n    $scope.img_oninit = function (camera) {\n        camera.snapshotLoadingInProgress = false;\n    };\n    $scope.img_onloaded = function (camera) {\n        console.info(\"Image loaded: \" + camera.snapshot.img_url);\n        camera.snapshotLoadingInProgress = false;\n    };\n    $scope.disarm = function (cameraId) {\n      app.disarm(cameraId);\n    };\n  }\n};\n\nmodule.exports = dashboardView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/dashboardView.js\n// module id = 205\n// module chunks = 0","module.exports = __webpack_public_path__ + \"index.html\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.html\n// module id = 207\n// module chunks = 0","module.exports = angular;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 208\n// module chunks = 0","module.exports = undefined;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"amd\":\"angular-route\"}\n// module id = 209\n// module chunks = 0","'use strict';\n\nconst $ = require(\"jquery\");\nconst angular = require(\"angular\");\nconst moment = require(\"moment\");\nrequire(\"angular-route\");\n\nconst MOMENT_FORMAT = \"MMM DD YYYY @ hh:mm\";\n\n// style sheets\nrequire(\"bootstrap-webpack\");\nrequire(\"../scss/main.scss\");\n\n// index.html\nrequire(\"../index.html\");\n\nconst dashboardView = require(\"./dashboardView\");\nconst cameraListView = require(\"./cameraListView\");\nconst cameraView = require(\"./cameraView\");\n\nvar currentView;\nvar $currentViewScope;\n\nvar App = require(\"./app\");\nwindow.app = new App({\n  refresh: function () {\n    $currentViewScope.$apply();\n  }\n});\n\nangular\n  .module(\"app\", [\n    'ngRoute'\n  ])\n  .controller('DashboardViewCtrl', ['$scope', function ($scope) {\n    $currentViewScope = $scope;\n    currentView = dashboardView;\n    $.when(app.initialized).done(function () {\n      dashboardView.init(app, $scope);\n    });\n  }])\n  .controller('CameraListViewCtrl', ['$scope', function ($scope) {\n    $currentViewScope = $scope;\n    currentView = cameraListView;\n    $.when(app.initialized).done(function () {\n      cameraListView.init(app, $scope);\n    });\n  }])\n  .controller('CameraView', ['$routeParams', '$scope', function ($routeParams, $scope) {\n    $currentViewScope = $scope;\n    currentView = cameraView;\n    $.when(app.initialized).done(function () {\n      cameraView.init(app, $routeParams.id, $scope);\n    });\n  }])\n  .config(['$routeProvider', function ($routeProvider) {\n    $routeProvider\n      .when('/dashboard', { controller: 'DashboardViewCtrl', templateUrl: dashboardView.templateUrl } )\n      .when('/cameras', { controller: 'CameraListViewCtrl', templateUrl: cameraListView.templateUrl } )\n      .when('/cameras/:id', { controller: 'CameraView', templateUrl: cameraView.templateUrl } )\n      .otherwise({ redirectTo: '/dashboard' }); \n  }])\n  .filter('moment', function () {\n    return function (datestr) {\n      return moment(datestr).format(MOMENT_FORMAT);\n    };\n  })\n  .directive('imageloaded', function() {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            element.bind('load', function() {\n                //call the function that was passed\n                scope.$apply(attrs.imageloaded);\n            });\n        }\n    };\n  });  \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 210\n// module chunks = 0","var path = 'views/camera_list.html';\nvar html = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h1 id=\\\"tables\\\">Configuration</h1>\\n    </div>\\n\\n    <div class=\\\"bs-component\\\">\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th><strong>Id</strong></th>\\n            <th><strong>Name</strong></th>\\n            <th><strong>Phone Number</strong></th>\\n            <th><strong>SIM Sid</strong></th>\\n            <th><strong>Token</strong></th>\\n            <th><strong>Created</strong></th>\\n            <th><strong>Actions</strong></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"camera in cameras\\\" class=\\\"chalk-background\\\" ng-class=\\\"{'text-success': editedCameraInfo.id === camera.info.id}\\\">\\n            <td>{{ camera.info.id }}</td>\\n            <td>{{ camera.info.name }}</td>\\n            <td>{{ camera.info.contact_number }}</td>\\n            <td>{{ camera.info.twilio_sim_sid }}</td>\\n            <td>\\n                <small ng-if=\\\"editedCameraInfo.id === camera.info.id\\\" class=\\\"text-warning\\\">{{ editedCameraInfo.token }}</small>\\n                <button ng-click=\\\"regenTokenForCamera(camera.info.id)\\\" ng-if=\\\"editedCameraInfo.id !== camera.info.id\\\" class=\\\"btn btn-xs btn-success\\\">Regenerate</button>\\n            </td>\\n            <td>{{ camera.info.created_at | moment }}</td>\\n            <td>\\n                <button ng-click=\\\"editCamera(camera.info.id)\\\" class=\\\"btn btn-xs btn-success\\\">Edit</button>\\n                &nbsp;\\n                <button ng-click=\\\"deleteCamera(camera.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div></div><!-- /example -->\\n  </div>\\n</div>\\n\\n<button class=\\\"btn btn-primary add-camera-show\\\">New Security Camera</button>\\n\\n<div class=\\\"row add-camera chalk-background\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"addCamera()\\\">\\n      <fieldset>\\n        <h2>Add Security Camera</h2>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2\\\">Id</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.id\\\" id=\\\"id\\\" placeholder=\\\"\\\">\\n            <p>This can be any unique alphanumeric identifier.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2\\\">Name</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.name\\\" id=\\\"name\\\" placeholder=\\\"\\\">\\n            <p>Give your Security Camera a descriptive name for the dashboard.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"contact_number\\\" class=\\\"col-lg-2\\\">Phone Number</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.contact_number\\\" id=\\\"contact_number\\\" placeholder=\\\"\\\">\\n            <p>The phone number that receives text notifications.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"twilio_sim_sid\\\" class=\\\"col-lg-2\\\">Twilio SIM Sid</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.twilio_sim_sid\\\" id=\\\"twilio_sim_sid\\\" placeholder=\\\"\\\">\\n            <p>You can find your SIM Sid in Twilio's <a href=\\\"https://www.twilio.com/console/wireless/sims/\\\">Console</a>.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default add-camera-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"add-camera-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\\n<div class=\\\"row edit-camera\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"updateCamera()\\\">\\n      <fieldset>\\n        <legend>Update Security Camera</legend>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2\\\">Id</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.id\\\" id=\\\"id\\\" value=\\\"{{ editedCameraInfo.id }}\\\" placeholder=\\\"\\\" disabled>\\n            <p>This can be any unique alphanumeric identifier.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2\\\">Name</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.name\\\" id=\\\"name\\\" value=\\\"{{ editedCameraInfo.name }}\\\" placeholder=\\\"\\\">\\n            <p>Give your Security Camera a descriptive name for the dashboard.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"contact_number\\\" class=\\\"col-lg-2\\\">Phone Number</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.contact_number\\\" id=\\\"contact_number\\\" value=\\\"{{ editedCameraInfo.contact_number }}\\\" placeholder=\\\"\\\">\\n            <p>This is the phone number that receives text notifications.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"twilio_sim_sid\\\" class=\\\"col-lg-2\\\">Twilio SIM Sid</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.twilio_sim_sid\\\" id=\\\"twilio_sim_sid\\\" value=\\\"{{ editedCameraInfo.twilio_sim_sid }}\\\" placeholder=\\\"\\\">\\n            <p>You can find your SIM Sid in Twilio's <a href=\\\"https://www.twilio.com/console/wireless/sims/\\\">Console</a>.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default edit-camera-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"edit-camera-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/camera_list.html\n// module id = 295\n// module chunks = 0","var path = 'views/camera_view.html';\nvar html = \"<div class=\\\"archive-notification\\\" ng-show=\\\"!snapshotTmpUrl\\\">\\n  <h1>No Security Camera Alerts</h1>\\n  <p>No notifications have been logged.</p>\\n</div>\\n\\n<div ng-show=\\\"!!snapshotTmpUrl\\\">\\n  <h1>{{ camera.info.name }}</h1>\\n\\n  <div class=\\\"alerts-list\\\">\\n    <span>Select an alert to view\\n      <select class=\\\"form-control\\\" id=\\\"alertSelect\\\" ng-model=\\\"selectedAlertId\\\" ng-change=\\\"selectedAlertChanged()\\\">\\n        <option value=\\\"\\\" selected>Click to select</option>\\n        <option ng-repeat=\\\"alert in alerts\\\" value=\\\"{{alert.data.index}}\\\">{{alert.data.index}} : {{alert.data.value.datetime_utc | moment}}</option>\\n      </select>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"archive-view row chalk-background\\\">\\n    <div class=\\\"camera-feed buffer\\\">\\n      <img ng-src=\\\"{{ snapshotTmpUrl }}\\\" />\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row navigate-archive\\\">\\n      <a href=\\\"\\\" ng-click=\\\"selectPreviousArchive()\\\">&lt;Previous</a> |\\n      <a href=\\\"\\\" ng-click=\\\"selectNextArchive()\\\">Next &gt;</a>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/camera_view.html\n// module id = 296\n// module chunks = 0","var path = 'views/dashboard.html';\nvar html = \"<h1>Active Security Cameras</h1>\\n\\n<p ng-show=\\\"noCamera()\\\">We aren't tracking any Security Cameras right now. Click the Add Security Camera button to get started.</p>\\n\\n<div ng-repeat=\\\"camera in cameras\\\" class=\\\"jumbotron camera camera{{ camera.info.id }} chalk-background\\\">\\n  <h3>\\n    <span>{{ camera.info.name }}</span>\\n    <div>\\n      <span class=\\\"small\\\">Select the mode for your camera</span>\\n        <select class=\\\"selectpicker small\\\" autocomplete=\\\"off\\\"\\n          ng-model=\\\"camera.mode\\\"\\n          ng-change=\\\"changeCameraMode(camera)\\\">\\n            <option value=\\\"live-feed\\\">Live Feed</option>\\n            <option value=\\\"arm\\\">Armed</option>\\n        </select>\\n    </div>\\n  </h3>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-8 col-lg-offset-2 img-parent\\\">\\n      <div class=\\\"camera-feed\\\">\\n        <img ng-src=\\\"{{ camera.snapshot.img_url }}\\\" ng-init=\\\"img_oninit(camera)\\\" imageloaded=\\\"img_onloaded(camera)\\\"/>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row motion_stats\\\">\\n    <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n      <div class=\\\"alert alert-success\\\" ng-if=\\\"camera.control.alarm.id === camera.control.arm.responded_alarm\\\">\\n        <strong>No Active Alarm</strong>\\n      </div>\\n      <button class=\\\"alert alert-danger\\\" ng-if=\\\"camera.control.alarm.id !== camera.control.arm.responded_alarm\\\" ng-click=\\\"disarm(camera.info.id)\\\">\\n        <strong>Dismiss Alarm</strong>\\n      </button>\\n      <div>\\n        <a href=\\\"#!/cameras/{{ camera.info.id }}\\\">Browse archived alerts</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/dashboard.html\n// module id = 297\n// module chunks = 0","module.exports = Twilio.Sync;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Twilio.Sync\"\n// module id = 322\n// module chunks = 0"],"sourceRoot":""}