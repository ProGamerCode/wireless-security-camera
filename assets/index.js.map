{"version":3,"sources":["webpack:///index.js","webpack:///./js/app.js","webpack:///./js/cameraListView.js","webpack:///./js/cameraView.js","webpack:///./js/dashboardView.js","webpack:///./index.html","webpack:///external \"angular\"","webpack:///external {\"amd\":\"angular-route\"}","webpack:///./js/index.js","webpack:///./views/camera_list.html","webpack:///./views/camera_view.html","webpack:///./views/dashboard.html","webpack:///external \"Twilio.Sync\""],"names":["webpackJsonp","202","module","exports","__webpack_require__","CAMERA_SNAPSHOT_DOCUMENT_NAME","cameraId","CAMERA_CONTROL_MAP_NAME","CAMERA_ALERTS_LIST_NAME","CAMERA_ARCHIVES_LIST_NAME","alertId","callbacks","randomString","len","charSet","i","randomPoz","Math","floor","random","length","substring","fetchSnapshotTmpUrl","mcs_url","callback","$","ajax","type","url","dataType","beforeSend","xhr","setRequestHeader","token","success","data","status","links","content_direct_temporary","fetchCameraSnapshotTmpUrl","camera","snapshot","snapshotTmpUrl","snapshotLoadingInProgress","img_url","console","info","refresh","fetchSnapshot","syncClient","document","id","then","doc","snapshotDocument","value","on","log","JSON","stringify","fetchControl","map","Promise","all","get","items","controlMap","control","preview","alarm","arm","key","loadCameras","invalidCameras","configDocument","cameras","name","contact_number","twilio_sim_sid","warn","push","removeAllListeners","cameraInfoCheck","match","genToken","hash","crypto","createHash","update","digest","SyncClient","Client","initialized","Deferred","updateToken","cb","that","this","result","setTimeout","bind","ttl","error","fail","jqXHR","textStatus","fetchConfiguration","newDoc","extend","forEach","idOfInvalidCamera","set","addCamera","newCamera","created_at","Date","getTime","t","mutate","remoteData","enabled","responded_alarm","list","catch","err","updateCamera","updatedCamera","regenToken","deleteCamera","removeMap","removeList","controlPreview","controlArm","disarm","getAlerts","getItems","order","page","getNextArchivedSnapshot","archiveId","item","init","resolve","203","cameraListView","templateUrl","app","$scope","angular","copy","cameraAdded","text","editedCameraInfo","hide","fadeIn","$apply","editCamera","regenTokenForCamera","cameraUpdated","click","204","cameraView","selectedAlertChanged","selectedAlertId","selectedArchiveId","selectNewArchiveId","newArchiveId","selectPreviousArchive","selectNextArchive","alerts","index","205","dashboardView","modes","noCamera","Object","keys","onload","switchPreview","switchArm","207","p","208","209","undefined","210","moment","currentView","$currentViewScope","App","window","controller","when","done","$routeParams","config","$routeProvider","otherwise","redirectTo","filter","datestr","format","directive","restrict","link","scope","element","attrs","imageloaded","295","path","run","c","put","296","297","322","Twilio","Sync"],"mappings":"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","file":"index.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 202:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nconst APP_CONFIGURATION_DOCUMENT_NAME = \"app.configuration\";\nfunction CAMERA_SNAPSHOT_DOCUMENT_NAME(cameraId) { return \"cameras.\" + cameraId + \".snapshot\"; }\nfunction CAMERA_CONTROL_MAP_NAME(cameraId) { return \"cameras.\" + cameraId + \".control\"; }\nfunction CAMERA_ALERTS_LIST_NAME(cameraId) { return \"cameras.\" + cameraId + \".alerts\"; }\nfunction CAMERA_ARCHIVES_LIST_NAME(cameraId, alertId) { return \"cameras.\" + cameraId + \".archives.\" + alertId; }\n\nmodule.exports = function(callbacks) {\n  const $ = __webpack_require__(4);\n  const crypto = __webpack_require__(43);\n  const SyncClient = __webpack_require__(322).Client;\n  var syncClient;\n  var token;\n  var auth = \"username=twilio&pincode=928462\";\n  var configDocument;\n\n  var cameras = {};\n\n  function randomString(len) {\n      var charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      var randomString = '';\n      for (var i = 0; i < len; i++) {\n          var randomPoz = Math.floor(Math.random() * charSet.length);\n          randomString += charSet.substring(randomPoz,randomPoz+1);\n      }\n      return randomString;\n  }\n\n  function fetchSnapshotTmpUrl(mcs_url, callback) {\n    $.ajax({\n      type: \"GET\",\n      url: mcs_url,\n      dataType: 'json',\n      beforeSend: function (xhr) { xhr.setRequestHeader('X-Twilio-Token', token); },\n      success: function (data, status, xhr) {\n        callback(data.links.content_direct_temporary);\n      }\n    });\n  }\n\n  function fetchCameraSnapshotTmpUrl(camera) {\n    fetchSnapshotTmpUrl(camera.snapshot.mcs_url, function (snapshotTmpUrl) {\n        // do not load new image when last image loading is in progress\n        // otherwise user might experience stalling camera view\n        if (!camera.snapshotLoadingInProgress) {\n            camera.snapshotLoadingInProgress = true;\n            camera.snapshot.img_url = snapshotTmpUrl;\n            console.info(\"Loading image: \" + camera.snapshot.img_url);\n        }\n        callbacks.refresh();\n    });\n  }\n\n  function fetchSnapshot(camera) {\n    syncClient.document(CAMERA_SNAPSHOT_DOCUMENT_NAME(camera.info.id)).then(function (doc) {\n      camera.snapshotDocument = doc;\n      camera.snapshot = doc.value;\n      fetchCameraSnapshotTmpUrl(camera);\n      doc.on(\"updated\", function (data) {\n        console.log(\"camera snapshot updated\", camera.info.id, JSON.stringify(data));\n        camera.snapshot = data;\n        fetchCameraSnapshotTmpUrl(camera);\n      });\n    });\n  }\n\n  function fetchControl(camera) {\n    syncClient.map(CAMERA_CONTROL_MAP_NAME(camera.info.id)).then(function (map) {\n      Promise.all([\n        map.get(\"preview\"),\n        map.get(\"alarm\"),\n        map.get(\"arm\")\n      ]).then(function (items) {\n        camera.controlMap = map;\n        camera.control = {\n          preview : items[0].value,\n          alarm : items[1].value,\n          arm : items[2].value,\n        };\n        console.log(\"camera control fetched\", camera.info.id, JSON.stringify(camera.control));\n        map.on(\"itemUpdated\", function (data) {\n          console.log(\"camera control updated\", camera.info.id, data.key, JSON.stringify(data.value));\n          camera.control[data.key] = data.value;\n          callbacks.refresh();\n        });\n        callbacks.refresh();\n      });\n    });\n  }\n\n  function loadCameras() {\n    var invalidCameras = [];\n\n    for (var cameraId in configDocument.value.cameras) {\n      var camera = configDocument.value.cameras[cameraId];\n      if (camera.id === cameraId &&\n          typeof (camera.name) === \"string\" &&\n          typeof(camera.contact_number) === \"string\" &&\n          typeof(camera.twilio_sim_sid) === \"string\") {\n        if (cameraId in cameras) {\n          if (camera.name !== cameras[cameraId].info.name ||\n              camera.contact_number !== cameras[cameraId].info.contact_number ||\n              camera.twilio_sim_sid !== cameras[cameraId].info.twilio_sim_sid) {\n            console.log(\"Updating camera\", camera);\n            cameras[cameraId].info = camera;\n          }\n        } else {\n          console.log(\"Loading new camera\", camera);\n          cameras[cameraId] = {\n            info: camera\n          };\n          fetchSnapshot(cameras[cameraId]);\n          fetchControl(cameras[cameraId]);\n        }\n      } else {\n        console.warn(\"Invalid camera configuration, removing from the list: \", cameraId, camera);\n        invalidCameras.push(cameraId);\n      }\n    }\n    for (var cameraId in cameras) {\n      if (!(cameraId in configDocument.value.cameras)) {\n        console.log(\"Deleting camera\", camera);\n        if (cameras[cameraId].snapshotDocument) {\n          cameras[cameraId].snapshotDocument.removeAllListeners('updated');\n        }\n        if (cameras[cameraId].controlMap) {\n          cameras[cameraId].controlMap.removeAllListeners('itemUpdated');\n        }\n        delete cameras[cameraId];\n      }\n    }\n\n    return invalidCameras;\n  }\n\n  function cameraInfoCheck(camera, callback) {\n    if (!camera.id || !camera.id.match(/^[a-zA-Z0-9]+$/))  { callback(\"camera id is invalid: \" + camera.id); return false; }\n    if (!camera.name) { callback(\"camera name is not specified\"); return false; }\n    if (!camera.contact_number || !camera.contact_number.match(/^[0-9]+$/)) { callback(\"camera contact number is invalid(only digits allowed): \" + camera.contact_number); return false; }\n    if (!camera.twilio_sim_sid || !camera.twilio_sim_sid.match(/^DE[a-z0-9]{32}$/)) { callback(\"camera sim SID is invalid: \" + camera.twilio_sim_sid); return false; }\n    return true;\n  }\n\n  function genToken() {\n    var token = randomString(16);\n    var hash = crypto.createHash('sha512').update(token).digest(\"hex\");\n    return { token: token, hash: hash };\n  }\n\n  return {\n  initialized: $.Deferred(),\n\n  cameras: cameras,\n\n  updateToken: function (cb) {\n    var that = this;\n    return $.get(\"/userauthenticate?\" + auth, function (result) {\n      if (result.success) {\n        console.log(\"token updated:\", result);\n        token = result.token;\n        if (syncClient) {\n            syncClient.updateToken(token);\n        } else {\n            syncClient = new SyncClient(token);\n        }\n        if (cb) cb(token);\n        setTimeout(that.updateToken.bind(that), result.ttl*1000 * 0.96); // update token slightly in adance of ttl\n      } else {\n        console.error(\"failed to authenticate the user: \", result.error);\n      }\n    }).fail(function (jqXHR, textStatus, error) {\n      console.error(\"failed to send authentication request:\", textStatus, error);\n      setTimeout(that.updateToken.bind(that), 10000); // retry in 10 seconds\n    });\n  },\n\n  fetchConfiguration: function () {\n    return syncClient.document(APP_CONFIGURATION_DOCUMENT_NAME).then(function (doc) {\n      configDocument = doc;\n      var newDoc = null;\n      var invalidCameras;\n\n      if (doc.value.cameras) {\n        invalidCameras = loadCameras();\n        if (invalidCameras.length) {\n          if (null ===  newDoc) newDoc = $.extend(true, doc.value, {});\n          invalidCameras.forEach(function (idOfInvalidCamera) {\n            delete newDoc.cameras[idOfInvalidCamera];\n          });\n        }\n      } else {\n        console.warn(\"cameras is not configured, creating an empty list\");\n        if (null ===  newDoc) newDoc = $.extend(true, doc.value, {});\n        newDoc.cameras = {};\n      }\n      return newDoc;\n    }).then(function (newDoc) {\n      if (newDoc !== null) {\n        return configDocument.set(newDoc).then(function () {\n          console.log(\"app configuration updated with new value:\", newDoc);\n        });\n      }\n    });\n  },\n\n  addCamera: function (newCamera, callback) {\n    if (!cameraInfoCheck(newCamera, callback)) return;\n    if (newCamera.id in configDocument.value.cameras) return callback(\"Camera with the same ID exists\");\n    newCamera.created_at = (new Date()).getTime();\n\n    var t = genToken();\n    newCamera.hash = t.hash;\n\n    configDocument.mutate(function (remoteData) {\n      if (!remoteData.cameras) remoteData.cameras = {};\n      remoteData.cameras[newCamera.id] = newCamera;\n      return remoteData;\n    }).then(function () {\n      // create necessary objects\n      return Promise.all([\n        syncClient.map(CAMERA_CONTROL_MAP_NAME(newCamera.id)).then(function (controlMap) {\n          return Promise.all[\n            controlMap.set('alarm', { id: -1 }),\n            controlMap.set('arm', { enabled: true, responded_alarm: -1}),\n            controlMap.set('preview', { enabled : false })\n          ];\n        }),\n        syncClient.list(CAMERA_ALERTS_LIST_NAME(newCamera.id)),\n      ]);\n    }).then(function () {\n      loadCameras();\n      // make token temporarily visible\n      callback(null, $.extend(true, cameras[newCamera.id].info, { token: t.token }));\n      callbacks.refresh();\n    }).catch(function (err) {\n      callback(err);\n    });\n  },\n\n  updateCamera: function (updatedCamera, callback) {\n    configDocument.mutate(function (remoteData) {\n      if (updatedCamera.id in remoteData.cameras) {\n        remoteData.cameras[updatedCamera.id] = $.extend(true, updatedCamera, {\n            hash: remoteData.cameras[updatedCamera.id].hash\n          });\n      } else {\n        callback(\"Camera is not in the list\");\n      }\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      callback(null);\n      callbacks.refresh();\n    }).catch(function (err) {\n      callback(err);\n    });\n  },\n\n  regenToken: function (cameraId, callback) {\n    var t = genToken();\n    configDocument.mutate(function (remoteData) {\n      if (cameraId in remoteData.cameras) {\n        remoteData.cameras[cameraId].hash = t.hash;\n      } else {\n        throw \"unknown camera: \" + cameraId;\n      }\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      // make token temporarily visible\n      callback($.extend(true, cameras[cameraId].info, { token: t.token }));\n      callbacks.refresh();\n    }).catch(function (err) {\n      // ignore error\n      console.error(\"regenToken\", err);\n    });\n  },\n\n  deleteCamera: function (cameraId) {\n    configDocument.mutate(function (remoteData) {\n      delete remoteData.cameras[cameraId];\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      callbacks.refresh();\n    }).then(function () {\n      syncClient.map(CAMERA_CONTROL_MAP_NAME(cameraId)).then(function (map) { map.removeMap(); });\n      syncClient.list(CAMERA_ALERTS_LIST_NAME(cameraId)).then(function (list) { list.removeList(); });\n    });\n  },\n\n  controlPreview: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"preview\", camera.control.preview)\n    .then(function () {\n      console.log(\"switchPreview updated\", cameraId, camera.control.preview);\n    }).catch(function (err) {\n      console.err(\"switchPreview failed\", err);\n    });\n  },\n\n  controlArm: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"arm\", camera.control.arm)\n    .then(function () {\n      console.log(\"switchArm updated\", cameraId, camera.control.arm);\n    }).catch(function (err) {\n      console.err(\"switchArm failed\", err);\n    });\n  },\n\n  disarm: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"arm\", {\n      enabled: camera.control.arm.enabled,\n      responded_alarm: camera.control.alarm.id\n    })\n    .then(function () {\n      console.log(\"disarm updated\", cameraId, camera.control.arm);\n    }).catch(function (err) {\n      console.err(\"disarm failed\", err);\n    });\n  },\n\n  getAlerts: function (cameraId, callback) {\n    syncClient.list(CAMERA_ALERTS_LIST_NAME(cameraId)).then(function (list) {\n      return list.getItems({ order: \"desc\" }).then(function (page) {\n        console.log(\"getAlerts\", page);\n        callback(page.items);\n      });\n    }).catch(function (err) {\n      console.error(\"getAlerts failed\", err);\n    });\n  },\n\n  getNextArchivedSnapshot: function (cameraId, alertId, archiveId, callback) {\n    syncClient.list(CAMERA_ARCHIVES_LIST_NAME(cameraId, alertId)).then(function (list) {\n      return list.get(archiveId);\n    }).then(function (item) {\n      fetchSnapshotTmpUrl(item.data.value.mcs_url, function (snapshotTmpUrl) {\n        callback(snapshotTmpUrl);\n      });\n    }).catch(function (err) {\n      console.info(\"getNextArchivedSnapshot failed\", err);\n      callback(null);\n    });\n  },\n\n  init: function () {\n    var that = this;\n    this.updateToken(function (token) {\n      that.fetchConfiguration().then(function () {\n        callbacks.refresh();\n      }).then(function () {\n        that.initialized.resolve();\n      });\n    });\n  }\n  };\n};\n\n\n/***/ }),\n\n/***/ 203:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $ = __webpack_require__(4);\n\nvar cameraListView = {\n  templateUrl: __webpack_require__(295),\n\n  init: function (app, $scope) {\n    $scope.cameras = app.cameras;\n    $scope.newCamera = {};\n    $scope.addCamera = function () {\n      app.addCamera(angular.copy($scope.newCamera), function (err, cameraAdded) {\n        if (err) {\n          $('#add-camera-failed').text(JSON.stringify(err));          \n        } else {\n          $scope.editedCameraInfo = cameraAdded;\n          $('.add-camera').hide();\n          $('.add-camera-show').fadeIn(333);          \n          $scope.$apply();\n        }\n      });\n    };\n    $scope.editCamera = function (cameraId) {\n      $scope.editedCameraInfo = app.cameras[cameraId].info;\n      $('.edit-camera').fadeIn(333);\n    };\n    $scope.updateCamera = function () {\n      app.updateCamera(angular.copy($scope.editedCameraInfo), function (err) {\n        if (err) {\n          $('#edit-camera-failed').text(JSON.stringify(err));          \n        } else {\n          $('.edit-camera').hide();\n          $scope.$apply();\n        }\n      });\n    };\n    $scope.deleteCamera = function (cameraId) {\n      app.deleteCamera(cameraId);\n    };\n    $scope.regenTokenForCamera = function (cameraId) {\n      app.regenToken(cameraId, function (cameraUpdated) {\n        $scope.editedCameraInfo = cameraUpdated;\n      });\n    };\n\n    $('.add-camera-show').click(function() {\n      $(this).hide();\n      $('.add-camera').fadeIn(333);\n    });\n    $('.add-camera-cancel').click(function() {\n      $('.add-camera').hide();\n      $('.add-camera-show').fadeIn(333);\n    });\n\n    $('.edit-camera-cancel').click(function() {\n      $scope.editedCameraInfo = null;\n      $('.edit-camera').hide();\n      $scope.$apply();\n    });\n  },\n};\n\nmodule.exports = cameraListView;\n\n\n/***/ }),\n\n/***/ 204:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $ = __webpack_require__(4);\n\nvar cameraView = {\n  templateUrl: __webpack_require__(296),\n\n  init: function (app, cameraId, $scope) {\n    $scope.camera = app.cameras[cameraId];\n    $scope.selectedAlertChanged = function () {\n      console.log(\"selectedAlertChanged\", $scope.selectedAlertId);\n      $scope.selectedArchiveId = 0;\n      $scope.selectNewArchiveId(0);\n      $scope.snapshotTmpUrl = null;\n    };\n    $scope.selectNewArchiveId = function (newArchiveId) {\n      console.log(\"selectNewArchiveId start\", $scope.selectedAlertId, newArchiveId);\n      app.getNextArchivedSnapshot(cameraId, $scope.selectedAlertId, newArchiveId, function (snapshotTmpUrl) {\n        if (snapshotTmpUrl) {\n          console.log(\"selectNewArchiveId accepted\", $scope.selectedAlertId, snapshotTmpUrl);\n          $scope.selectedArchiveId = newArchiveId;\n          $scope.snapshotTmpUrl = snapshotTmpUrl;\n          $scope.$apply();\n        } else {\n          console.log(\"selectNewArchiveId rejected\", $scope.selectedAlertId);\n        }\n      });\n    };\n    $scope.selectPreviousArchive = function () {\n      if ($scope.selectedArchiveId > 0) {\n        $scope.selectNewArchiveId($scope.selectedArchiveId - 1);\n      }\n    };\n    $scope.selectNextArchive = function () {\n        $scope.selectNewArchiveId($scope.selectedArchiveId + 1);\n    };\n    app.getAlerts(cameraId, function (alerts) {\n      $scope.alerts = alerts;\n      $scope.selectedAlertId = alerts[0].data.index+\"\";\n      $scope.$apply();\n      $scope.selectedAlertChanged();\n    });\n  }\n};\n\nmodule.exports = cameraView;\n\n\n/***/ }),\n\n/***/ 205:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dashboardView = {\n  templateUrl: __webpack_require__(297),\n\n  init: function (app, $scope) {\n    $scope.cameras = app.cameras;\n    $scope.modes = [\"live-feed\", \"arm\"];\n    $scope.noCamera = function () { return Object.keys(app.cameras).length === 0; }\n    $scope.update = function(value, camera) {\n      if (value == \"live-feed\") {\n        camera.control.preview.enabled = true;\n        camera.control.arm.enabled = false;\n      }\n      else {\n        camera.control.preview.enabled = false;\n        camera.control.arm.enabled = true;        \n      }\n      app.controlPreview(camera.info.id);\n      app.controlArm(camera.info.id);\n      console.log(camera.info)\n    };\n    $scope.onload = function (camera) {\n        console.info(\"Image loaded: \" + camera.snapshot.img_url);\n        camera.snapshotLoadingInProgress = false;\n    };\n    $scope.switchPreview = function (cameraId) {\n      app.controlPreview(cameraId);\n    };\n    $scope.switchArm = function (cameraId) {\n      app.controlArm(cameraId);\n    };\n    $scope.disarm = function (cameraId) {\n      app.disarm(cameraId);\n    };\n  }\n};\n\nmodule.exports = dashboardView;\n\n\n/***/ }),\n\n/***/ 207:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"index.html\";\n\n/***/ }),\n\n/***/ 208:\n/***/ (function(module, exports) {\n\nmodule.exports = angular;\n\n/***/ }),\n\n/***/ 209:\n/***/ (function(module, exports) {\n\nmodule.exports = undefined;\n\n/***/ }),\n\n/***/ 210:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nconst $ = __webpack_require__(4);\nconst angular = __webpack_require__(208);\nconst moment = __webpack_require__(0);\n__webpack_require__(209);\n\nconst MOMENT_FORMAT = \"MMM DD YYYY @ hh:mm\";\n\n// style sheets\n__webpack_require__(30);\n__webpack_require__(31);\n\n// index.html\n__webpack_require__(207);\n\nconst dashboardView = __webpack_require__(205);\nconst cameraListView = __webpack_require__(203);\nconst cameraView = __webpack_require__(204);\n\nvar currentView;\nvar $currentViewScope;\n\nvar App = __webpack_require__(202);\nwindow.app = new App({\n  refresh: function () {\n    $currentViewScope.$apply();\n  }\n});\n\nangular\n  .module(\"app\", [\n    'ngRoute'\n  ])\n  .controller('DashboardViewCtrl', ['$scope', function ($scope) {\n    $currentViewScope = $scope;\n    currentView = dashboardView;\n    $.when(app.initialized).done(function () {\n      dashboardView.init(app, $scope);\n    });\n  }])\n  .controller('CameraListViewCtrl', ['$scope', function ($scope) {\n    $currentViewScope = $scope;\n    currentView = cameraListView;\n    $.when(app.initialized).done(function () {\n      cameraListView.init(app, $scope);\n    });\n  }])\n  .controller('CameraView', ['$routeParams', '$scope', function ($routeParams, $scope) {\n    $currentViewScope = $scope;\n    currentView = cameraView;\n    $.when(app.initialized).done(function () {\n      cameraView.init(app, $routeParams.id, $scope);\n    });\n  }])\n  .config(['$routeProvider', function ($routeProvider) {\n    $routeProvider\n      .when('/dashboard', { controller: 'DashboardViewCtrl', templateUrl: dashboardView.templateUrl } )\n      .when('/cameras', { controller: 'CameraListViewCtrl', templateUrl: cameraListView.templateUrl } )\n      .when('/cameras/:id', { controller: 'CameraView', templateUrl: cameraView.templateUrl } )\n      .otherwise({ redirectTo: '/dashboard' }); \n  }])\n  .filter('moment', function () {\n    return function (datestr) {\n      return moment(datestr).format(MOMENT_FORMAT);\n    };\n  })\n  .directive('imageloaded', function() {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            element.bind('load', function() {\n                //call the function that was passed\n                scope.$apply(attrs.imageloaded);\n            });\n        }\n    };\n  });  \n\n\n/***/ }),\n\n/***/ 295:\n/***/ (function(module, exports) {\n\nvar path = 'views/camera_list.html';\nvar html = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h1 id=\\\"tables\\\">Configuration</h1>\\n    </div>\\n\\n    <div class=\\\"bs-component\\\">\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th><strong>Id</strong></th>\\n            <th><strong>Name</strong></th>\\n            <th><strong>Phone Number</strong></th>\\n            <th><strong>SIM Sid</strong></th>\\n            <th><strong>Token</strong></th>\\n            <th><strong>Created</strong></th>\\n            <th><strong>Actions</strong></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"camera in cameras\\\" class=\\\"chalk-background\\\" ng-class=\\\"{'text-success': editedCameraInfo.id === camera.info.id}\\\">\\n            <td>{{ camera.info.id }}</td>\\n            <td>{{ camera.info.name }}</td>\\n            <td>{{ camera.info.contact_number }}</td>\\n            <td>{{ camera.info.twilio_sim_sid }}</td>\\n            <td>\\n                <small ng-if=\\\"editedCameraInfo.id === camera.info.id\\\" class=\\\"text-warning\\\">{{ editedCameraInfo.token }}</small>\\n                <button ng-click=\\\"regenTokenForCamera(camera.info.id)\\\" ng-if=\\\"editedCameraInfo.id !== camera.info.id\\\" class=\\\"btn btn-xs btn-success\\\">Regenerate</button>\\n            </td>\\n            <td>{{ camera.info.created_at | moment }}</td>\\n            <td>\\n                <button ng-click=\\\"editCamera(camera.info.id)\\\" class=\\\"btn btn-xs btn-success\\\">Edit</button>\\n                &nbsp;\\n                <button ng-click=\\\"deleteCamera(camera.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div></div><!-- /example -->\\n  </div>\\n</div>\\n\\n<button class=\\\"btn btn-primary add-camera-show\\\">New Security Camera</button>\\n\\n<div class=\\\"row add-camera chalk-background\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"addCamera()\\\">\\n      <fieldset>\\n        <h2>Add Security Camera</h2>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2\\\">Id</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.id\\\" id=\\\"id\\\" placeholder=\\\"\\\">\\n            <p>This can be any unique alphanumeric identifier.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2\\\">Name</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.name\\\" id=\\\"name\\\" placeholder=\\\"\\\">\\n            <p>Give your Security Camera a descriptive name for the dashboard.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"contact_number\\\" class=\\\"col-lg-2\\\">Phone Number</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.contact_number\\\" id=\\\"contact_number\\\" placeholder=\\\"\\\">\\n            <p>The phone number that receives text notifications.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"twilio_sim_sid\\\" class=\\\"col-lg-2\\\">Twilio SIM Sid</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.twilio_sim_sid\\\" id=\\\"twilio_sim_sid\\\" placeholder=\\\"\\\">\\n            <p>You can find your SIM Sid in Twilio's <a href=\\\"https://www.twilio.com/console/wireless/sims/\\\">Console</a>.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default add-camera-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"add-camera-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\\n<div class=\\\"row edit-camera\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"updateCamera()\\\">\\n      <fieldset>\\n        <legend>Update Security Camera</legend>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2\\\">Id</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.id\\\" id=\\\"id\\\" value=\\\"{{ editedCameraInfo.id }}\\\" placeholder=\\\"\\\" disabled>\\n            <p>This can be any unique alphanumeric identifier.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2\\\">Name</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.name\\\" id=\\\"name\\\" value=\\\"{{ editedCameraInfo.name }}\\\" placeholder=\\\"\\\">\\n            <p>Give your Security Camera a descriptive name for the dashboard.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"contact_number\\\" class=\\\"col-lg-2\\\">Phone Number</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.contact_number\\\" id=\\\"contact_number\\\" value=\\\"{{ editedCameraInfo.contact_number }}\\\" placeholder=\\\"\\\">\\n            <p>This is the phone number that receives text notifications.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"twilio_sim_sid\\\" class=\\\"col-lg-2\\\">Twilio SIM Sid</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.twilio_sim_sid\\\" id=\\\"twilio_sim_sid\\\" value=\\\"{{ editedCameraInfo.twilio_sim_sid }}\\\" placeholder=\\\"\\\">\\n            <p>You can find your SIM Sid in Twilio's <a href=\\\"https://www.twilio.com/console/wireless/sims/\\\">Console</a>.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default edit-camera-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"edit-camera-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 296:\n/***/ (function(module, exports) {\n\nvar path = 'views/camera_view.html';\nvar html = \"<div class=\\\"archive-notification\\\" ng-show=\\\"!snapshotTmpUrl\\\">\\n  <h1>No Security Camera Alerts</h1>\\n  <p>No notifications have been logged.</p>\\n</div>\\n\\n<div ng-show=\\\"!!snapshotTmpUrl\\\">\\n  <h1>{{ camera.info.name }}</h1>\\n\\n  <div class=\\\"alerts-list\\\">\\n    <span>Select an alert to view\\n      <select class=\\\"form-control\\\" id=\\\"alertSelect\\\" ng-model=\\\"selectedAlertId\\\" ng-change=\\\"selectedAlertChanged()\\\">\\n        <option value=\\\"\\\" selected>Click to select</option>\\n        <option ng-repeat=\\\"alert in alerts\\\" value=\\\"{{alert.data.index}}\\\">{{alert.data.index}} : {{alert.data.value.datetime_utc | moment}}</option>\\n      </select>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"archive-view row chalk-background\\\">\\n    <div class=\\\"camera-feed buffer\\\">\\n      <img ng-src=\\\"{{ snapshotTmpUrl }}\\\" />\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row navigate-archive\\\">\\n      <a href=\\\"\\\" ng-click=\\\"selectPreviousArchive()\\\">&lt;Previous</a> |\\n      <a href=\\\"\\\" ng-click=\\\"selectNextArchive()\\\">Next &gt;</a>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 297:\n/***/ (function(module, exports) {\n\nvar path = 'views/dashboard.html';\nvar html = \"<h1>Active Security Cameras</h1>\\n\\n<p ng-show=\\\"noCamera()\\\">We aren't tracking any Security Cameras right now. Click the Add Security Camera button to get started.</p>\\n\\n<div ng-repeat=\\\"camera in cameras\\\" class=\\\"jumbotron camera camera{{ camera.info.id }} chalk-background\\\">\\n  <h3>\\n    <span>{{ camera.info.name }}</span>\\n    <div>\\n      <span class=\\\"small\\\">Select the mode for your camera</span>\\n        <select class=\\\"selectpicker small\\\"\\n          ng-model=\\\"selectedCameraMode\\\"\\n          ng-init=\\\"selectedCameraMode = camera.control.preview.enabled ? 'live-feed' : 'arm'\\\"\\n          ng-change=\\\"update(selectedCameraMode, camera)\\\">\\n            <option value=\\\"\\\">Click to select</option>\\n            <option value=\\\"live-feed\\\" ng-selected=\\\"camera.control.preview.enabled\\\">Live Feed</option>\\n            <option value=\\\"arm\\\" ng-selected=\\\"camera.control.arm.enabled\\\">Armed</option>\\n        </select>\\n    </div>\\n  </h3>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-8 col-lg-offset-2 img-parent\\\">\\n      <div class=\\\"camera-feed\\\">\\n        <img ng-src=\\\"{{ camera.snapshot.img_url }}\\\" imageloaded=\\\"onload(camera)\\\"/>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row motion_stats\\\">\\n    <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n      <div class=\\\"alert alert-success\\\" ng-if=\\\"camera.control.alarm.id === camera.control.arm.responded_alarm\\\">\\n        <strong>No Active Alarm</strong>\\n      </div>\\n      <button class=\\\"alert alert-danger\\\" ng-if=\\\"camera.control.alarm.id !== camera.control.arm.responded_alarm\\\" ng-click=\\\"disarm(camera.info.id)\\\">\\n        <strong>Dismiss Alarm</strong>\\n      </button>\\n      <div>\\n        <a href=\\\"#!/cameras/{{ camera.info.id }}\\\">Browse archived alerts</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 322:\n/***/ (function(module, exports) {\n\nmodule.exports = Twilio.Sync;\n\n/***/ })\n\n},[210]);\n\n\n// WEBPACK FOOTER //\n// index.js","'use strict';\n\nconst APP_CONFIGURATION_DOCUMENT_NAME = \"app.configuration\";\nfunction CAMERA_SNAPSHOT_DOCUMENT_NAME(cameraId) { return \"cameras.\" + cameraId + \".snapshot\"; }\nfunction CAMERA_CONTROL_MAP_NAME(cameraId) { return \"cameras.\" + cameraId + \".control\"; }\nfunction CAMERA_ALERTS_LIST_NAME(cameraId) { return \"cameras.\" + cameraId + \".alerts\"; }\nfunction CAMERA_ARCHIVES_LIST_NAME(cameraId, alertId) { return \"cameras.\" + cameraId + \".archives.\" + alertId; }\n\nmodule.exports = function(callbacks) {\n  const $ = require(\"jquery\");\n  const crypto = require(\"crypto\");\n  const SyncClient = require(\"twilio-sync\").Client;\n  var syncClient;\n  var token;\n  var auth = \"username=twilio&pincode=928462\";\n  var configDocument;\n\n  var cameras = {};\n\n  function randomString(len) {\n      var charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      var randomString = '';\n      for (var i = 0; i < len; i++) {\n          var randomPoz = Math.floor(Math.random() * charSet.length);\n          randomString += charSet.substring(randomPoz,randomPoz+1);\n      }\n      return randomString;\n  }\n\n  function fetchSnapshotTmpUrl(mcs_url, callback) {\n    $.ajax({\n      type: \"GET\",\n      url: mcs_url,\n      dataType: 'json',\n      beforeSend: function (xhr) { xhr.setRequestHeader('X-Twilio-Token', token); },\n      success: function (data, status, xhr) {\n        callback(data.links.content_direct_temporary);\n      }\n    });\n  }\n\n  function fetchCameraSnapshotTmpUrl(camera) {\n    fetchSnapshotTmpUrl(camera.snapshot.mcs_url, function (snapshotTmpUrl) {\n        // do not load new image when last image loading is in progress\n        // otherwise user might experience stalling camera view\n        if (!camera.snapshotLoadingInProgress) {\n            camera.snapshotLoadingInProgress = true;\n            camera.snapshot.img_url = snapshotTmpUrl;\n            console.info(\"Loading image: \" + camera.snapshot.img_url);\n        }\n        callbacks.refresh();\n    });\n  }\n\n  function fetchSnapshot(camera) {\n    syncClient.document(CAMERA_SNAPSHOT_DOCUMENT_NAME(camera.info.id)).then(function (doc) {\n      camera.snapshotDocument = doc;\n      camera.snapshot = doc.value;\n      fetchCameraSnapshotTmpUrl(camera);\n      doc.on(\"updated\", function (data) {\n        console.log(\"camera snapshot updated\", camera.info.id, JSON.stringify(data));\n        camera.snapshot = data;\n        fetchCameraSnapshotTmpUrl(camera);\n      });\n    });\n  }\n\n  function fetchControl(camera) {\n    syncClient.map(CAMERA_CONTROL_MAP_NAME(camera.info.id)).then(function (map) {\n      Promise.all([\n        map.get(\"preview\"),\n        map.get(\"alarm\"),\n        map.get(\"arm\")\n      ]).then(function (items) {\n        camera.controlMap = map;\n        camera.control = {\n          preview : items[0].value,\n          alarm : items[1].value,\n          arm : items[2].value,\n        };\n        console.log(\"camera control fetched\", camera.info.id, JSON.stringify(camera.control));\n        map.on(\"itemUpdated\", function (data) {\n          console.log(\"camera control updated\", camera.info.id, data.key, JSON.stringify(data.value));\n          camera.control[data.key] = data.value;\n          callbacks.refresh();\n        });\n        callbacks.refresh();\n      });\n    });\n  }\n\n  function loadCameras() {\n    var invalidCameras = [];\n\n    for (var cameraId in configDocument.value.cameras) {\n      var camera = configDocument.value.cameras[cameraId];\n      if (camera.id === cameraId &&\n          typeof (camera.name) === \"string\" &&\n          typeof(camera.contact_number) === \"string\" &&\n          typeof(camera.twilio_sim_sid) === \"string\") {\n        if (cameraId in cameras) {\n          if (camera.name !== cameras[cameraId].info.name ||\n              camera.contact_number !== cameras[cameraId].info.contact_number ||\n              camera.twilio_sim_sid !== cameras[cameraId].info.twilio_sim_sid) {\n            console.log(\"Updating camera\", camera);\n            cameras[cameraId].info = camera;\n          }\n        } else {\n          console.log(\"Loading new camera\", camera);\n          cameras[cameraId] = {\n            info: camera\n          };\n          fetchSnapshot(cameras[cameraId]);\n          fetchControl(cameras[cameraId]);\n        }\n      } else {\n        console.warn(\"Invalid camera configuration, removing from the list: \", cameraId, camera);\n        invalidCameras.push(cameraId);\n      }\n    }\n    for (var cameraId in cameras) {\n      if (!(cameraId in configDocument.value.cameras)) {\n        console.log(\"Deleting camera\", camera);\n        if (cameras[cameraId].snapshotDocument) {\n          cameras[cameraId].snapshotDocument.removeAllListeners('updated');\n        }\n        if (cameras[cameraId].controlMap) {\n          cameras[cameraId].controlMap.removeAllListeners('itemUpdated');\n        }\n        delete cameras[cameraId];\n      }\n    }\n\n    return invalidCameras;\n  }\n\n  function cameraInfoCheck(camera, callback) {\n    if (!camera.id || !camera.id.match(/^[a-zA-Z0-9]+$/))  { callback(\"camera id is invalid: \" + camera.id); return false; }\n    if (!camera.name) { callback(\"camera name is not specified\"); return false; }\n    if (!camera.contact_number || !camera.contact_number.match(/^[0-9]+$/)) { callback(\"camera contact number is invalid(only digits allowed): \" + camera.contact_number); return false; }\n    if (!camera.twilio_sim_sid || !camera.twilio_sim_sid.match(/^DE[a-z0-9]{32}$/)) { callback(\"camera sim SID is invalid: \" + camera.twilio_sim_sid); return false; }\n    return true;\n  }\n\n  function genToken() {\n    var token = randomString(16);\n    var hash = crypto.createHash('sha512').update(token).digest(\"hex\");\n    return { token: token, hash: hash };\n  }\n\n  return {\n  initialized: $.Deferred(),\n\n  cameras: cameras,\n\n  updateToken: function (cb) {\n    var that = this;\n    return $.get(\"/userauthenticate?\" + auth, function (result) {\n      if (result.success) {\n        console.log(\"token updated:\", result);\n        token = result.token;\n        if (syncClient) {\n            syncClient.updateToken(token);\n        } else {\n            syncClient = new SyncClient(token);\n        }\n        if (cb) cb(token);\n        setTimeout(that.updateToken.bind(that), result.ttl*1000 * 0.96); // update token slightly in adance of ttl\n      } else {\n        console.error(\"failed to authenticate the user: \", result.error);\n      }\n    }).fail(function (jqXHR, textStatus, error) {\n      console.error(\"failed to send authentication request:\", textStatus, error);\n      setTimeout(that.updateToken.bind(that), 10000); // retry in 10 seconds\n    });\n  },\n\n  fetchConfiguration: function () {\n    return syncClient.document(APP_CONFIGURATION_DOCUMENT_NAME).then(function (doc) {\n      configDocument = doc;\n      var newDoc = null;\n      var invalidCameras;\n\n      if (doc.value.cameras) {\n        invalidCameras = loadCameras();\n        if (invalidCameras.length) {\n          if (null ===  newDoc) newDoc = $.extend(true, doc.value, {});\n          invalidCameras.forEach(function (idOfInvalidCamera) {\n            delete newDoc.cameras[idOfInvalidCamera];\n          });\n        }\n      } else {\n        console.warn(\"cameras is not configured, creating an empty list\");\n        if (null ===  newDoc) newDoc = $.extend(true, doc.value, {});\n        newDoc.cameras = {};\n      }\n      return newDoc;\n    }).then(function (newDoc) {\n      if (newDoc !== null) {\n        return configDocument.set(newDoc).then(function () {\n          console.log(\"app configuration updated with new value:\", newDoc);\n        });\n      }\n    });\n  },\n\n  addCamera: function (newCamera, callback) {\n    if (!cameraInfoCheck(newCamera, callback)) return;\n    if (newCamera.id in configDocument.value.cameras) return callback(\"Camera with the same ID exists\");\n    newCamera.created_at = (new Date()).getTime();\n\n    var t = genToken();\n    newCamera.hash = t.hash;\n\n    configDocument.mutate(function (remoteData) {\n      if (!remoteData.cameras) remoteData.cameras = {};\n      remoteData.cameras[newCamera.id] = newCamera;\n      return remoteData;\n    }).then(function () {\n      // create necessary objects\n      return Promise.all([\n        syncClient.map(CAMERA_CONTROL_MAP_NAME(newCamera.id)).then(function (controlMap) {\n          return Promise.all[\n            controlMap.set('alarm', { id: -1 }),\n            controlMap.set('arm', { enabled: true, responded_alarm: -1}),\n            controlMap.set('preview', { enabled : false })\n          ];\n        }),\n        syncClient.list(CAMERA_ALERTS_LIST_NAME(newCamera.id)),\n      ]);\n    }).then(function () {\n      loadCameras();\n      // make token temporarily visible\n      callback(null, $.extend(true, cameras[newCamera.id].info, { token: t.token }));\n      callbacks.refresh();\n    }).catch(function (err) {\n      callback(err);\n    });\n  },\n\n  updateCamera: function (updatedCamera, callback) {\n    configDocument.mutate(function (remoteData) {\n      if (updatedCamera.id in remoteData.cameras) {\n        remoteData.cameras[updatedCamera.id] = $.extend(true, updatedCamera, {\n            hash: remoteData.cameras[updatedCamera.id].hash\n          });\n      } else {\n        callback(\"Camera is not in the list\");\n      }\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      callback(null);\n      callbacks.refresh();\n    }).catch(function (err) {\n      callback(err);\n    });\n  },\n\n  regenToken: function (cameraId, callback) {\n    var t = genToken();\n    configDocument.mutate(function (remoteData) {\n      if (cameraId in remoteData.cameras) {\n        remoteData.cameras[cameraId].hash = t.hash;\n      } else {\n        throw \"unknown camera: \" + cameraId;\n      }\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      // make token temporarily visible\n      callback($.extend(true, cameras[cameraId].info, { token: t.token }));\n      callbacks.refresh();\n    }).catch(function (err) {\n      // ignore error\n      console.error(\"regenToken\", err);\n    });\n  },\n\n  deleteCamera: function (cameraId) {\n    configDocument.mutate(function (remoteData) {\n      delete remoteData.cameras[cameraId];\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      callbacks.refresh();\n    }).then(function () {\n      syncClient.map(CAMERA_CONTROL_MAP_NAME(cameraId)).then(function (map) { map.removeMap(); });\n      syncClient.list(CAMERA_ALERTS_LIST_NAME(cameraId)).then(function (list) { list.removeList(); });\n    });\n  },\n\n  controlPreview: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"preview\", camera.control.preview)\n    .then(function () {\n      console.log(\"switchPreview updated\", cameraId, camera.control.preview);\n    }).catch(function (err) {\n      console.err(\"switchPreview failed\", err);\n    });\n  },\n\n  controlArm: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"arm\", camera.control.arm)\n    .then(function () {\n      console.log(\"switchArm updated\", cameraId, camera.control.arm);\n    }).catch(function (err) {\n      console.err(\"switchArm failed\", err);\n    });\n  },\n\n  disarm: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"arm\", {\n      enabled: camera.control.arm.enabled,\n      responded_alarm: camera.control.alarm.id\n    })\n    .then(function () {\n      console.log(\"disarm updated\", cameraId, camera.control.arm);\n    }).catch(function (err) {\n      console.err(\"disarm failed\", err);\n    });\n  },\n\n  getAlerts: function (cameraId, callback) {\n    syncClient.list(CAMERA_ALERTS_LIST_NAME(cameraId)).then(function (list) {\n      return list.getItems({ order: \"desc\" }).then(function (page) {\n        console.log(\"getAlerts\", page);\n        callback(page.items);\n      });\n    }).catch(function (err) {\n      console.error(\"getAlerts failed\", err);\n    });\n  },\n\n  getNextArchivedSnapshot: function (cameraId, alertId, archiveId, callback) {\n    syncClient.list(CAMERA_ARCHIVES_LIST_NAME(cameraId, alertId)).then(function (list) {\n      return list.get(archiveId);\n    }).then(function (item) {\n      fetchSnapshotTmpUrl(item.data.value.mcs_url, function (snapshotTmpUrl) {\n        callback(snapshotTmpUrl);\n      });\n    }).catch(function (err) {\n      console.info(\"getNextArchivedSnapshot failed\", err);\n      callback(null);\n    });\n  },\n\n  init: function () {\n    var that = this;\n    this.updateToken(function (token) {\n      that.fetchConfiguration().then(function () {\n        callbacks.refresh();\n      }).then(function () {\n        that.initialized.resolve();\n      });\n    });\n  }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/app.js\n// module id = 202\n// module chunks = 0","var $ = require(\"jquery\");\n\nvar cameraListView = {\n  templateUrl: require(\"../views/camera_list.html\"),\n\n  init: function (app, $scope) {\n    $scope.cameras = app.cameras;\n    $scope.newCamera = {};\n    $scope.addCamera = function () {\n      app.addCamera(angular.copy($scope.newCamera), function (err, cameraAdded) {\n        if (err) {\n          $('#add-camera-failed').text(JSON.stringify(err));          \n        } else {\n          $scope.editedCameraInfo = cameraAdded;\n          $('.add-camera').hide();\n          $('.add-camera-show').fadeIn(333);          \n          $scope.$apply();\n        }\n      });\n    };\n    $scope.editCamera = function (cameraId) {\n      $scope.editedCameraInfo = app.cameras[cameraId].info;\n      $('.edit-camera').fadeIn(333);\n    };\n    $scope.updateCamera = function () {\n      app.updateCamera(angular.copy($scope.editedCameraInfo), function (err) {\n        if (err) {\n          $('#edit-camera-failed').text(JSON.stringify(err));          \n        } else {\n          $('.edit-camera').hide();\n          $scope.$apply();\n        }\n      });\n    };\n    $scope.deleteCamera = function (cameraId) {\n      app.deleteCamera(cameraId);\n    };\n    $scope.regenTokenForCamera = function (cameraId) {\n      app.regenToken(cameraId, function (cameraUpdated) {\n        $scope.editedCameraInfo = cameraUpdated;\n      });\n    };\n\n    $('.add-camera-show').click(function() {\n      $(this).hide();\n      $('.add-camera').fadeIn(333);\n    });\n    $('.add-camera-cancel').click(function() {\n      $('.add-camera').hide();\n      $('.add-camera-show').fadeIn(333);\n    });\n\n    $('.edit-camera-cancel').click(function() {\n      $scope.editedCameraInfo = null;\n      $('.edit-camera').hide();\n      $scope.$apply();\n    });\n  },\n};\n\nmodule.exports = cameraListView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/cameraListView.js\n// module id = 203\n// module chunks = 0","var $ = require(\"jquery\");\n\nvar cameraView = {\n  templateUrl: require(\"../views/camera_view.html\"),\n\n  init: function (app, cameraId, $scope) {\n    $scope.camera = app.cameras[cameraId];\n    $scope.selectedAlertChanged = function () {\n      console.log(\"selectedAlertChanged\", $scope.selectedAlertId);\n      $scope.selectedArchiveId = 0;\n      $scope.selectNewArchiveId(0);\n      $scope.snapshotTmpUrl = null;\n    };\n    $scope.selectNewArchiveId = function (newArchiveId) {\n      console.log(\"selectNewArchiveId start\", $scope.selectedAlertId, newArchiveId);\n      app.getNextArchivedSnapshot(cameraId, $scope.selectedAlertId, newArchiveId, function (snapshotTmpUrl) {\n        if (snapshotTmpUrl) {\n          console.log(\"selectNewArchiveId accepted\", $scope.selectedAlertId, snapshotTmpUrl);\n          $scope.selectedArchiveId = newArchiveId;\n          $scope.snapshotTmpUrl = snapshotTmpUrl;\n          $scope.$apply();\n        } else {\n          console.log(\"selectNewArchiveId rejected\", $scope.selectedAlertId);\n        }\n      });\n    };\n    $scope.selectPreviousArchive = function () {\n      if ($scope.selectedArchiveId > 0) {\n        $scope.selectNewArchiveId($scope.selectedArchiveId - 1);\n      }\n    };\n    $scope.selectNextArchive = function () {\n        $scope.selectNewArchiveId($scope.selectedArchiveId + 1);\n    };\n    app.getAlerts(cameraId, function (alerts) {\n      $scope.alerts = alerts;\n      $scope.selectedAlertId = alerts[0].data.index+\"\";\n      $scope.$apply();\n      $scope.selectedAlertChanged();\n    });\n  }\n};\n\nmodule.exports = cameraView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/cameraView.js\n// module id = 204\n// module chunks = 0","var dashboardView = {\n  templateUrl: require(\"../views/dashboard.html\"),\n\n  init: function (app, $scope) {\n    $scope.cameras = app.cameras;\n    $scope.modes = [\"live-feed\", \"arm\"];\n    $scope.noCamera = function () { return Object.keys(app.cameras).length === 0; }\n    $scope.update = function(value, camera) {\n      if (value == \"live-feed\") {\n        camera.control.preview.enabled = true;\n        camera.control.arm.enabled = false;\n      }\n      else {\n        camera.control.preview.enabled = false;\n        camera.control.arm.enabled = true;        \n      }\n      app.controlPreview(camera.info.id);\n      app.controlArm(camera.info.id);\n      console.log(camera.info)\n    };\n    $scope.onload = function (camera) {\n        console.info(\"Image loaded: \" + camera.snapshot.img_url);\n        camera.snapshotLoadingInProgress = false;\n    };\n    $scope.switchPreview = function (cameraId) {\n      app.controlPreview(cameraId);\n    };\n    $scope.switchArm = function (cameraId) {\n      app.controlArm(cameraId);\n    };\n    $scope.disarm = function (cameraId) {\n      app.disarm(cameraId);\n    };\n  }\n};\n\nmodule.exports = dashboardView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/dashboardView.js\n// module id = 205\n// module chunks = 0","module.exports = __webpack_public_path__ + \"index.html\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.html\n// module id = 207\n// module chunks = 0","module.exports = angular;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 208\n// module chunks = 0","module.exports = undefined;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"amd\":\"angular-route\"}\n// module id = 209\n// module chunks = 0","'use strict';\n\nconst $ = require(\"jquery\");\nconst angular = require(\"angular\");\nconst moment = require(\"moment\");\nrequire(\"angular-route\");\n\nconst MOMENT_FORMAT = \"MMM DD YYYY @ hh:mm\";\n\n// style sheets\nrequire(\"bootstrap-webpack\");\nrequire(\"../scss/main.scss\");\n\n// index.html\nrequire(\"../index.html\");\n\nconst dashboardView = require(\"./dashboardView\");\nconst cameraListView = require(\"./cameraListView\");\nconst cameraView = require(\"./cameraView\");\n\nvar currentView;\nvar $currentViewScope;\n\nvar App = require(\"./app\");\nwindow.app = new App({\n  refresh: function () {\n    $currentViewScope.$apply();\n  }\n});\n\nangular\n  .module(\"app\", [\n    'ngRoute'\n  ])\n  .controller('DashboardViewCtrl', ['$scope', function ($scope) {\n    $currentViewScope = $scope;\n    currentView = dashboardView;\n    $.when(app.initialized).done(function () {\n      dashboardView.init(app, $scope);\n    });\n  }])\n  .controller('CameraListViewCtrl', ['$scope', function ($scope) {\n    $currentViewScope = $scope;\n    currentView = cameraListView;\n    $.when(app.initialized).done(function () {\n      cameraListView.init(app, $scope);\n    });\n  }])\n  .controller('CameraView', ['$routeParams', '$scope', function ($routeParams, $scope) {\n    $currentViewScope = $scope;\n    currentView = cameraView;\n    $.when(app.initialized).done(function () {\n      cameraView.init(app, $routeParams.id, $scope);\n    });\n  }])\n  .config(['$routeProvider', function ($routeProvider) {\n    $routeProvider\n      .when('/dashboard', { controller: 'DashboardViewCtrl', templateUrl: dashboardView.templateUrl } )\n      .when('/cameras', { controller: 'CameraListViewCtrl', templateUrl: cameraListView.templateUrl } )\n      .when('/cameras/:id', { controller: 'CameraView', templateUrl: cameraView.templateUrl } )\n      .otherwise({ redirectTo: '/dashboard' }); \n  }])\n  .filter('moment', function () {\n    return function (datestr) {\n      return moment(datestr).format(MOMENT_FORMAT);\n    };\n  })\n  .directive('imageloaded', function() {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            element.bind('load', function() {\n                //call the function that was passed\n                scope.$apply(attrs.imageloaded);\n            });\n        }\n    };\n  });  \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 210\n// module chunks = 0","var path = 'views/camera_list.html';\nvar html = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h1 id=\\\"tables\\\">Configuration</h1>\\n    </div>\\n\\n    <div class=\\\"bs-component\\\">\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th><strong>Id</strong></th>\\n            <th><strong>Name</strong></th>\\n            <th><strong>Phone Number</strong></th>\\n            <th><strong>SIM Sid</strong></th>\\n            <th><strong>Token</strong></th>\\n            <th><strong>Created</strong></th>\\n            <th><strong>Actions</strong></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"camera in cameras\\\" class=\\\"chalk-background\\\" ng-class=\\\"{'text-success': editedCameraInfo.id === camera.info.id}\\\">\\n            <td>{{ camera.info.id }}</td>\\n            <td>{{ camera.info.name }}</td>\\n            <td>{{ camera.info.contact_number }}</td>\\n            <td>{{ camera.info.twilio_sim_sid }}</td>\\n            <td>\\n                <small ng-if=\\\"editedCameraInfo.id === camera.info.id\\\" class=\\\"text-warning\\\">{{ editedCameraInfo.token }}</small>\\n                <button ng-click=\\\"regenTokenForCamera(camera.info.id)\\\" ng-if=\\\"editedCameraInfo.id !== camera.info.id\\\" class=\\\"btn btn-xs btn-success\\\">Regenerate</button>\\n            </td>\\n            <td>{{ camera.info.created_at | moment }}</td>\\n            <td>\\n                <button ng-click=\\\"editCamera(camera.info.id)\\\" class=\\\"btn btn-xs btn-success\\\">Edit</button>\\n                &nbsp;\\n                <button ng-click=\\\"deleteCamera(camera.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div></div><!-- /example -->\\n  </div>\\n</div>\\n\\n<button class=\\\"btn btn-primary add-camera-show\\\">New Security Camera</button>\\n\\n<div class=\\\"row add-camera chalk-background\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"addCamera()\\\">\\n      <fieldset>\\n        <h2>Add Security Camera</h2>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2\\\">Id</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.id\\\" id=\\\"id\\\" placeholder=\\\"\\\">\\n            <p>This can be any unique alphanumeric identifier.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2\\\">Name</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.name\\\" id=\\\"name\\\" placeholder=\\\"\\\">\\n            <p>Give your Security Camera a descriptive name for the dashboard.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"contact_number\\\" class=\\\"col-lg-2\\\">Phone Number</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.contact_number\\\" id=\\\"contact_number\\\" placeholder=\\\"\\\">\\n            <p>The phone number that receives text notifications.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"twilio_sim_sid\\\" class=\\\"col-lg-2\\\">Twilio SIM Sid</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.twilio_sim_sid\\\" id=\\\"twilio_sim_sid\\\" placeholder=\\\"\\\">\\n            <p>You can find your SIM Sid in Twilio's <a href=\\\"https://www.twilio.com/console/wireless/sims/\\\">Console</a>.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default add-camera-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"add-camera-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\\n<div class=\\\"row edit-camera\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"updateCamera()\\\">\\n      <fieldset>\\n        <legend>Update Security Camera</legend>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2\\\">Id</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.id\\\" id=\\\"id\\\" value=\\\"{{ editedCameraInfo.id }}\\\" placeholder=\\\"\\\" disabled>\\n            <p>This can be any unique alphanumeric identifier.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2\\\">Name</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.name\\\" id=\\\"name\\\" value=\\\"{{ editedCameraInfo.name }}\\\" placeholder=\\\"\\\">\\n            <p>Give your Security Camera a descriptive name for the dashboard.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"contact_number\\\" class=\\\"col-lg-2\\\">Phone Number</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.contact_number\\\" id=\\\"contact_number\\\" value=\\\"{{ editedCameraInfo.contact_number }}\\\" placeholder=\\\"\\\">\\n            <p>This is the phone number that receives text notifications.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"twilio_sim_sid\\\" class=\\\"col-lg-2\\\">Twilio SIM Sid</label>\\n          <div class=\\\"col-lg-12\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.twilio_sim_sid\\\" id=\\\"twilio_sim_sid\\\" value=\\\"{{ editedCameraInfo.twilio_sim_sid }}\\\" placeholder=\\\"\\\">\\n            <p>You can find your SIM Sid in Twilio's <a href=\\\"https://www.twilio.com/console/wireless/sims/\\\">Console</a>.</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default edit-camera-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"edit-camera-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/camera_list.html\n// module id = 295\n// module chunks = 0","var path = 'views/camera_view.html';\nvar html = \"<div class=\\\"archive-notification\\\" ng-show=\\\"!snapshotTmpUrl\\\">\\n  <h1>No Security Camera Alerts</h1>\\n  <p>No notifications have been logged.</p>\\n</div>\\n\\n<div ng-show=\\\"!!snapshotTmpUrl\\\">\\n  <h1>{{ camera.info.name }}</h1>\\n\\n  <div class=\\\"alerts-list\\\">\\n    <span>Select an alert to view\\n      <select class=\\\"form-control\\\" id=\\\"alertSelect\\\" ng-model=\\\"selectedAlertId\\\" ng-change=\\\"selectedAlertChanged()\\\">\\n        <option value=\\\"\\\" selected>Click to select</option>\\n        <option ng-repeat=\\\"alert in alerts\\\" value=\\\"{{alert.data.index}}\\\">{{alert.data.index}} : {{alert.data.value.datetime_utc | moment}}</option>\\n      </select>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"archive-view row chalk-background\\\">\\n    <div class=\\\"camera-feed buffer\\\">\\n      <img ng-src=\\\"{{ snapshotTmpUrl }}\\\" />\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row navigate-archive\\\">\\n      <a href=\\\"\\\" ng-click=\\\"selectPreviousArchive()\\\">&lt;Previous</a> |\\n      <a href=\\\"\\\" ng-click=\\\"selectNextArchive()\\\">Next &gt;</a>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/camera_view.html\n// module id = 296\n// module chunks = 0","var path = 'views/dashboard.html';\nvar html = \"<h1>Active Security Cameras</h1>\\n\\n<p ng-show=\\\"noCamera()\\\">We aren't tracking any Security Cameras right now. Click the Add Security Camera button to get started.</p>\\n\\n<div ng-repeat=\\\"camera in cameras\\\" class=\\\"jumbotron camera camera{{ camera.info.id }} chalk-background\\\">\\n  <h3>\\n    <span>{{ camera.info.name }}</span>\\n    <div>\\n      <span class=\\\"small\\\">Select the mode for your camera</span>\\n        <select class=\\\"selectpicker small\\\"\\n          ng-model=\\\"selectedCameraMode\\\"\\n          ng-init=\\\"selectedCameraMode = camera.control.preview.enabled ? 'live-feed' : 'arm'\\\"\\n          ng-change=\\\"update(selectedCameraMode, camera)\\\">\\n            <option value=\\\"\\\">Click to select</option>\\n            <option value=\\\"live-feed\\\" ng-selected=\\\"camera.control.preview.enabled\\\">Live Feed</option>\\n            <option value=\\\"arm\\\" ng-selected=\\\"camera.control.arm.enabled\\\">Armed</option>\\n        </select>\\n    </div>\\n  </h3>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-8 col-lg-offset-2 img-parent\\\">\\n      <div class=\\\"camera-feed\\\">\\n        <img ng-src=\\\"{{ camera.snapshot.img_url }}\\\" imageloaded=\\\"onload(camera)\\\"/>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row motion_stats\\\">\\n    <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n      <div class=\\\"alert alert-success\\\" ng-if=\\\"camera.control.alarm.id === camera.control.arm.responded_alarm\\\">\\n        <strong>No Active Alarm</strong>\\n      </div>\\n      <button class=\\\"alert alert-danger\\\" ng-if=\\\"camera.control.alarm.id !== camera.control.arm.responded_alarm\\\" ng-click=\\\"disarm(camera.info.id)\\\">\\n        <strong>Dismiss Alarm</strong>\\n      </button>\\n      <div>\\n        <a href=\\\"#!/cameras/{{ camera.info.id }}\\\">Browse archived alerts</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/dashboard.html\n// module id = 297\n// module chunks = 0","module.exports = Twilio.Sync;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Twilio.Sync\"\n// module id = 322\n// module chunks = 0"],"sourceRoot":""}